USE [bdActivosV1]
GO
/****** Object:  Table [dbo].[tUsuarios]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tUsuarios](
	[CodUsuario] [nvarchar](15) NOT NULL,
	[CodEmpleado] [nvarchar](15) NOT NULL,
	[IdRol] [int] NOT NULL,
	[ClaveAcceso] [nvarchar](10) NULL,
	[UrlUltimaSession] [nvarchar](max) NULL,
	[Activo] [bit] NOT NULL,
	[UserUpdate] [varchar](50) NULL,
	[FechaUpdate] [datetime] NULL,
 CONSTRAINT [PK_tUsuarios] PRIMARY KEY CLUSTERED 
(
	[CodUsuario] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  View [dbo].[vAccesoLogin]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vAccesoLogin] AS
SELECT u.CodUsuario, u.CodEmpleado, u.ClaveAcceso, u.IdRol, c.ApellidoPaterno, c.ApellidoMaterno, c.PrimerNombre, c.SegundoNombre, c.NombreTrabajador, c.CorreoPersonal, c.FechaNacimiento, c.CodGenero, c.DescripGenero, 
       c.Celular, c.DescripcionTT, c.Foto, c.Firma, u.UrlUltimaSession
FROM   dbo.tUsuarios AS u INNER JOIN
       bdRecursosHumanos.dbo.vcontratos AS c ON u.CodEmpleado = c.CodTrabajador
WHERE  (u.Activo = '1') AND (c.EstadoActual NOT IN ('ve', 'fi'))
GO
/****** Object:  View [dbo].[vArticulos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vArticulos]
AS
SELECT DISTINCT 
                         ar.idarticulo, ar.Descripcion_articulo, ar.Descripcion_impresion, ar.Descripcion_usos, ar.EsOriginal, ar.EnMaestro, mar.codMarca, ar.idGrupoProd, ar.cod_articulo, ar.CodStockWin, mar.DescripcionMarca, mar.Mercado, 
                         ar.Nro_Parte, ar.codUMBase, um.AbrevUM, te.codSunatTipoExistencia, te.DescripcionTipoExist, ar.PesoKgUMBase
FROM            bdGestionLubriseng.dbo.tArticulo AS ar INNER JOIN
                         bdGestionLubriseng.dbo.tMarca AS mar ON ar.codMarca = mar.codMarca INNER JOIN
                         bdGestionLubriseng.dbo.tUnidad_Medida AS um ON ar.codUMBase = um.CodUM INNER JOIN
                         bdGestionLubriseng.dbo.tTipoExistencia AS te ON ar.IdTipoExistencia = te.idTipoExistencia
WHERE        (mar.ParaArticulos = '1')
GO
/****** Object:  View [dbo].[vEmpleados]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vEmpleados]
AS
SELECT FechaRegistro, codTrabajador, AbreviaturaTDI, NroDocumento, ApellidoPaterno, ApellidoMaterno, PrimerNombre, SegundoNombre, NombreTrabajador, Direccion, Foto, Firma, Cv, Clave, Celular, CorreoPersonal, CodGenero, 
       DescripGenero, FechaNacimiento, Estado, UserUpdate, FechaUpdate, TipoSangre, DescripEC, codPais, codSunatPais, NombrePais, codDpto, CodDptoSunat, NombreDpto, codProv, codProvSunat, NombreProvincia, CodDistrito, 
       codDistSunat, NombreDistrito, CodTipoVia, CodTipoViaSunat, DescripcionTipoVia, NombreVia, NroVia, CodZona, codZRSunat, DescripcionZR, NombreZona, CodTipoDireccion, DescripcionTD, Referencia, CodNacionalidad, 
       DescripcionNac, CodTipoDocIdentidad
FROM   bdRecursosHumanos.dbo.vtrabajador
GO
/****** Object:  Table [dbo].[tAmbiente]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tAmbiente](
	[idAmbiente] [int] IDENTITY(1,1) NOT NULL,
	[nombre] [nvarchar](100) NOT NULL,
	[descripcion] [nvarchar](255) NULL,
	[idEmpresa] [int] NULL,
	[idSucursal] [int] NOT NULL,
	[estado] [bit] NOT NULL,
	[fechaRegistro] [datetime] NOT NULL,
	[fechaMod] [datetime] NULL,
	[userMod] [nvarchar](15) NULL,
	[codigoAmbiente] [nchar](10) NULL,
 CONSTRAINT [PK_tAmbiente] PRIMARY KEY CLUSTERED 
(
	[idAmbiente] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tCategoriasActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tCategoriasActivo](
	[idCategoria] [int] IDENTITY(1,1) NOT NULL,
	[nombre] [nvarchar](100) NOT NULL,
	[descripcion] [nvarchar](255) NULL,
	[vidaUtilEstandar] [int] NULL,
	[estado] [bit] NOT NULL,
	[fechaRegistro] [datetime] NOT NULL,
	[fechaMod] [datetime] NULL,
	[userMod] [nvarchar](15) NULL,
	[codigoClase] [nvarchar](3) NOT NULL,
 CONSTRAINT [PK_tCategoriasActivo] PRIMARY KEY CLUSTERED 
(
	[idCategoria] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[vEntidadExternaGeneralProveedor]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vEntidadExternaGeneralProveedor] AS
SELECT Id, RazonSocial, codTipo, DescTipoEntExt, TipoDoc, Documento, CodTipoDocId, idGenero, (CASE EsProveedor WHEN '1' THEN 'Si' ELSE 'No' END) AS Prov, (CASE EsCliente WHEN '1' THEN 'Sí' ELSE 'No' END) AS Clie, 
       (CASE EsTransportista WHEN '1' THEN 'Sí' ELSE 'No' END) AS Trans, (CASE EsComprador WHEN '1' THEN 'Sí' ELSE 'No' END) AS Comp, (CASE EsAgenteRetencion WHEN '<> 0' THEN 'Sí' ELSE 'No' END) AS ARS, EsCliente, 
       EsTransportista, EsComprador, EsProveedor, EsAgenteRetencion, Genero, EstReg, COALESCE (nCodTipoPrecio, '0') AS nnCodTipoPrecio, CorreoFacturacion, FechaNacimiento, CodTipoDocIdSunat, ReqCompSinIGV, EstRegDoc, 
       EsEmpresaTransportePublico
FROM   bdGestionLubriseng.dbo.vEntidadExternaGeneral
GO
/****** Object:  Table [dbo].[tEstadoActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tEstadoActivo](
	[idEstadoActivo] [int] IDENTITY(1,1) NOT NULL,
	[nombre] [nvarchar](50) NOT NULL,
	[descripcion] [nvarchar](255) NULL,
	[esFinal] [bit] NOT NULL,
 CONSTRAINT [PK_tEstadoActivo] PRIMARY KEY CLUSTERED 
(
	[idEstadoActivo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tActivos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tActivos](
	[idActivo] [int] IDENTITY(1,1) NOT NULL,
	[codigo] [nvarchar](50) NOT NULL,
	[tipoRegistro] [varchar](20) NOT NULL,
	[idCategoria] [int] NULL,
	[idEstado] [int] NOT NULL,
	[enUso] [bit] NOT NULL,
	[idActivoPadre] [int] NULL,
	[esPadre] [bit] NULL,
	[fechaRegistro] [datetime] NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[idActivo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tActivoDetalle]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tActivoDetalle](
	[idActivo] [int] NOT NULL,
	[nombre] [nvarchar](100) NULL,
	[descripcion] [nvarchar](max) NULL,
	[serie] [nvarchar](100) NULL,
	[observaciones] [nvarchar](max) NULL,
	[valorAdquisicion] [decimal](12, 2) NULL,
	[vidaUtil] [int] NULL,
	[garantia] [bit] NULL,
	[fechaAdquisicion] [date] NULL,
	[fechaFinGarantia] [date] NULL,
	[userMod] [nvarchar](15) NULL,
	[fechaMod] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[idActivo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tUbicacionActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tUbicacionActivo](
	[idUbicacion] [int] IDENTITY(1,1) NOT NULL,
	[idActivo] [int] NOT NULL,
	[idEmpresa] [int] NULL,
	[idSucursal] [int] NULL,
	[idAmbiente] [int] NULL,
	[idResponsable] [nvarchar](15) NULL,
	[fechaInicio] [datetime] NOT NULL,
	[fechaFin] [datetime] NULL,
	[esActual] [bit] NULL,
PRIMARY KEY CLUSTERED 
(
	[idUbicacion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tOrigenActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tOrigenActivo](
	[idActivo] [int] NOT NULL,
	[idDocIngresoAlm] [int] NULL,
	[idDocumentoVenta] [numeric](18, 0) NULL,
	[idOrdenCompra] [numeric](18, 0) NULL,
	[idArticulo] [int] NULL,
	[idProveedor] [nvarchar](15) NULL,
PRIMARY KEY CLUSTERED 
(
	[idActivo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[vActivos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
/* =============================================
 VISTAS AGRUPADAS PARA SISTEMA DE ACTIVOS FIJOS
 BASE DE DATOS: bdActivosV1
 =============================================
 =============================
 1. VISTAS DE ACTIVOS
 =============================
 Vista principal de activos con todos los detalles
 =============================
 2. VISTAS DE COMPONENTES
 =============================
 Vista de activos que tienen componentes
CREATE OR ALTER VIEW vActivosConComponentes AS
SELECT
    p.idActivo AS IdActivoPadre,
    p.codigo AS CodigoPadre,
    pdet.nombre AS NombrePadre,
    c.idActivo AS IdActivoComponente,
    c.codigo AS CodigoComponente,
    cdet.nombre AS NombreComponente
FROM tActivos p
INNER JOIN tActivos c ON c.idActivoPadre = p.idActivo
LEFT JOIN tActivoDetalle pdet ON pdet.idActivo = p.idActivo
LEFT JOIN tActivoDetalle cdet ON cdet.idActivo = c.idActivo;
-- =============================
-- 3. VISTAS DE UBICACIÓN Y RESPONSABLE
-- =============================
-- Vista de ubicación actual del activo
CREATE OR ALTER VIEW vUbicacionActual AS
SELECT
    ua.idActivo,
    ua.idEmpresa,
    ua.idSucursal,
    ua.idAmbiente,
    amb.nombre AS NombreAmbiente,
    ua.idResponsable,
    ua.fechaInicio,
    u.codEmpleado,
    u.IdRol
FROM tUbicacionActivo ua
LEFT JOIN tAmbiente amb ON amb.idAmbiente = ua.idAmbiente
LEFT JOIN tUsuarios u ON u.CodUsuario = ua.idResponsable
WHERE ua.esActual = 1;
-- =============================
-- 4. VISTAS DE HISTORIAL
-- =============================
-- Vista de historial de estados del activo
CREATE OR ALTER VIEW vHistorialEstados AS
SELECT
    he.idHistorialEstado,
    he.idActivo,
    e1.nombre AS EstadoAnterior,
    e2.nombre AS EstadoNuevo,
    he.fecha,
    he.userMod
FROM tHistorialEstado he
LEFT JOIN tEstadoActivo e1 ON e1.idEstadoActivo = he.idEstadoAnterior
LEFT JOIN tEstadoActivo e2 ON e2.idEstadoActivo = he.idEstadoNuevo;
-- Vista de historial de ubicación
CREATE OR ALTER VIEW vHistorialUbicacion AS
SELECT
    hu.idHistorialUbicacion,
    hu.idActivo,
    a1.nombre AS AmbienteAnterior,
    a2.nombre AS AmbienteNuevo,
    hu.idResponsableAnterior,
    hu.idResponsableNuevo,
    hu.fecha,
    hu.userMod
FROM tHistorialUbicacion hu
LEFT JOIN tAmbiente a1 ON a1.idAmbiente = hu.idAmbienteAnterior
LEFT JOIN tAmbiente a2 ON a2.idAmbiente = hu.idAmbienteNuevo;
-- Vista de historial de serie
CREATE OR ALTER VIEW vHistorialSerie AS
SELECT
    hs.idHistorialSerie,
    hs.idActivo,
    hs.serieAnterior,
    hs.serieNueva,
    hs.motivo,
    hs.fecha,
    hs.userMod
FROM tHistorialSerie hs;
-- Vista de historial de valor
CREATE OR ALTER VIEW vHistorialValorActivo AS
SELECT
    hv.idHistorialValor,
    hv.idActivo,
    hv.valorAnterior,
    hv.valorNuevo,
    hv.motivo,
    hv.fecha,
    hv.userMod
FROM tHistorialValorActivo hv;
-- =============================
-- 5. VISTA DE BAJAS DE ACTIVOS
-- =============================
CREATE OR ALTER VIEW vBajasActivo AS
SELECT
    b.idBaja,
    b.idActivo,
    a.codigo,
    d.nombre AS nombre,
    b.tipoBaja,
    b.motivo,
    b.fechaBaja,
    b.documentoSoporte,
    b.observaciones,
    b.userMod
FROM tBajasActivo b
INNER JOIN tActivos a ON a.idActivo = b.idActivo
LEFT JOIN tActivoDetalle d ON d.idActivo = a.idActivo;
-- =============================
-- 6. VISTA DE MANTENIMIENTOS
-- =============================
CREATE OR ALTER VIEW vMantenimientos AS
SELECT
    m.idMantenimiento,
    m.idActivo,
    a.codigo,
    d.nombre AS nombre,
    m.idTipoMantenimiento,
    tm.nombre AS TipoMantenimiento,
    m.fechaProgramada,
    m.fechaRealizada,
    m.descripcion,
    m.observaciones,
    m.costoEstimado,
    m.costoReal,
    m.idProveedor,
    m.idResponsable,
    m.idEstadoMantenimiento,
    em.nombre AS EstadoMantenimiento,
    m.fechaRegistro,
    m.userMod
FROM tMantenimientos m
INNER JOIN tActivos a ON a.idActivo = m.idActivo
LEFT JOIN tActivoDetalle d ON d.idActivo = a.idActivo
LEFT JOIN tTipoMantenimiento tm ON tm.idTipoMantenimiento = m.idTipoMantenimiento
LEFT JOIN tEstadoMantenimiento em ON em.idEstadoMantenimiento = m.idEstadoMantenimiento;
-- =============================
-- 7. VISTA DE ORIGEN DOCUMENTAL
-- =============================
CREATE OR ALTER VIEW vOrigenActivo AS
SELECT
    o.idActivo,
    o.idDocIngresoAlm,
    o.idDocumentoVenta,
    o.idOrdenCompra,
    o.idArticulo,
    o.idProveedor
FROM tOrigenActivo o;*/
CREATE VIEW [dbo].[vActivos]
AS
SELECT        a.idActivo, a.codigo, a.tipoRegistro, a.idCategoria, cat.nombre AS Categoria, a.idEstado, est.nombre AS Estado, a.enUso, a.idActivoPadre, a.esPadre, COALESCE (det.nombre, art.Descripcion_articulo, N'No Registrado') 
                         AS NombreActivo, ISNULL(det.serie, N'Sin Serie') AS Serie, ISNULL(NULLIF (LTRIM(RTRIM(det.observaciones)), N''), N'No se registraron observaciones para este activo') AS Observaciones, det.valorAdquisicion, det.vidaUtil, 
                         det.garantia, CONVERT(varchar(16), det.fechaAdquisicion, 120) AS fechaAdquisicion, CONVERT(varchar(16), det.fechaFinGarantia, 120) AS fechaFinGarantia, CONVERT(varchar(16), a.fechaRegistro, 120) AS Expr3, 
                         CONVERT(varchar(16), ub.fechaInicio, 120) AS FechaUbicacion, ub.idEmpresa, ub.idSucursal, ub.idAmbiente, amb.nombre AS Ambiente, ub.idResponsable, ISNULL(em.NombreTrabajador, N'No Asignado') AS Responsable, 
                         ub.fechaInicio, ori.idDocIngresoAlm, ori.idDocumentoVenta, ori.idOrdenCompra, ori.idArticulo, ori.idProveedor, prov.RazonSocial, a.fechaRegistro
FROM            dbo.tActivos AS a LEFT OUTER JOIN
                         dbo.tActivoDetalle AS det ON det.idActivo = a.idActivo LEFT OUTER JOIN
                         dbo.tCategoriasActivo AS cat ON cat.idCategoria = a.idCategoria LEFT OUTER JOIN
                         dbo.tEstadoActivo AS est ON est.idEstadoActivo = a.idEstado LEFT OUTER JOIN
                         dbo.tUbicacionActivo AS ub ON ub.idActivo = a.idActivo AND ub.esActual = 1 LEFT OUTER JOIN
                         dbo.tAmbiente AS amb ON amb.idAmbiente = ub.idAmbiente LEFT OUTER JOIN
                         dbo.tOrigenActivo AS ori ON ori.idActivo = a.idActivo LEFT OUTER JOIN
                         dbo.vArticulos AS art ON ori.idArticulo = art.idarticulo LEFT OUTER JOIN
                         dbo.vEntidadExternaGeneralProveedor AS prov ON prov.Documento = ori.idProveedor LEFT OUTER JOIN
                         dbo.vEmpleados AS em ON ub.idResponsable = em.codTrabajador
GO
/****** Object:  View [dbo].[vActivosConComponentes]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vActivosConComponentes] AS
SELECT 
    p.idActivo AS IdPadre,
    p.codigo AS CodigoPadre,
    dp.nombre AS NombrePadre,
    c.idActivo AS IdComponente,
    c.codigo AS CodigoComponente,
    dc.nombre AS NombreComponente
FROM tActivos c
INNER JOIN tActivos p ON c.idActivoPadre = p.idActivo
LEFT JOIN tActivoDetalle dp ON p.idActivo = dp.idActivo
LEFT JOIN tActivoDetalle dc ON c.idActivo = dc.idActivo;




GO
/****** Object:  View [dbo].[vUbicacionActual]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

---- =============================
---- 3. VISTAS DE UBICACIÓN Y RESPONSABLE
---- =============================

---- Vista de ubicación actual del activo
CREATE   VIEW [dbo].[vUbicacionActual] AS
SELECT
    ua.idActivo,
    ua.idEmpresa,
    ua.idSucursal,
    ua.idAmbiente,
    amb.nombre AS NombreAmbiente,
    ua.idResponsable,
    ua.fechaInicio,
    u.codEmpleado,
    u.IdRol
FROM tUbicacionActivo ua
LEFT JOIN tAmbiente amb ON amb.idAmbiente = ua.idAmbiente
LEFT JOIN tUsuarios u ON u.CodUsuario = ua.idResponsable
WHERE ua.esActual = 1;

---- =============================
---- 4. VISTAS DE HISTORIAL
---- =============================

---- Vista de historial de estados del activo
--CREATE OR ALTER VIEW vHistorialEstados AS
--SELECT
--    he.idHistorialEstado,
--    he.idActivo,
--    e1.nombre AS EstadoAnterior,
--    e2.nombre AS EstadoNuevo,
--    he.fecha,
--    he.userMod
--FROM tHistorialEstado he
--LEFT JOIN tEstadoActivo e1 ON e1.idEstadoActivo = he.idEstadoAnterior
--LEFT JOIN tEstadoActivo e2 ON e2.idEstadoActivo = he.idEstadoNuevo;

---- Vista de historial de ubicación
--CREATE OR ALTER VIEW vHistorialUbicacion AS
--SELECT
--    hu.idHistorialUbicacion,
--    hu.idActivo,
--    a1.nombre AS AmbienteAnterior,
--    a2.nombre AS AmbienteNuevo,
--    hu.idResponsableAnterior,
--    hu.idResponsableNuevo,
--    hu.fecha,
--    hu.userMod
--FROM tHistorialUbicacion hu
--LEFT JOIN tAmbiente a1 ON a1.idAmbiente = hu.idAmbienteAnterior
--LEFT JOIN tAmbiente a2 ON a2.idAmbiente = hu.idAmbienteNuevo;

---- Vista de historial de serie
--CREATE OR ALTER VIEW vHistorialSerie AS
--SELECT
--    hs.idHistorialSerie,
--    hs.idActivo,
--    hs.serieAnterior,
--    hs.serieNueva,
--    hs.motivo,
--    hs.fecha,
--    hs.userMod
--FROM tHistorialSerie hs;

---- Vista de historial de valor
--CREATE OR ALTER VIEW vHistorialValorActivo AS
--SELECT
--    hv.idHistorialValor,
--    hv.idActivo,
--    hv.valorAnterior,
--    hv.valorNuevo,
--    hv.motivo,
--    hv.fecha,
--    hv.userMod
--FROM tHistorialValorActivo hv;

---- =============================
---- 5. VISTA DE BAJAS DE ACTIVOS
---- =============================
--CREATE OR ALTER VIEW vBajasActivo AS
--SELECT
--    b.idBaja,
--    b.idActivo,
--    a.codigo,
--    d.nombre AS nombre,
--    b.tipoBaja,
--    b.motivo,
--    b.fechaBaja,
--    b.documentoSoporte,
--    b.observaciones,
--    b.userMod
--FROM tBajasActivo b
--INNER JOIN tActivos a ON a.idActivo = b.idActivo
--LEFT JOIN tActivoDetalle d ON d.idActivo = a.idActivo;

---- =============================
---- 6. VISTA DE MANTENIMIENTOS
---- =============================
--CREATE OR ALTER VIEW vMantenimientos AS
--SELECT
--    m.idMantenimiento,
--    m.idActivo,
--    a.codigo,
--    d.nombre AS nombre,
--    m.idTipoMantenimiento,
--    tm.nombre AS TipoMantenimiento,
--    m.fechaProgramada,
--    m.fechaRealizada,
--    m.descripcion,
--    m.observaciones,
--    m.costoEstimado,
--    m.costoReal,
--    m.idProveedor,
--    m.idResponsable,
--    m.idEstadoMantenimiento,
--    em.nombre AS EstadoMantenimiento,
--    m.fechaRegistro,
--    m.userMod
--FROM tMantenimientos m
--INNER JOIN tActivos a ON a.idActivo = m.idActivo
--LEFT JOIN tActivoDetalle d ON d.idActivo = a.idActivo
--LEFT JOIN tTipoMantenimiento tm ON tm.idTipoMantenimiento = m.idTipoMantenimiento
--LEFT JOIN tEstadoMantenimiento em ON em.idEstadoMantenimiento = m.idEstadoMantenimiento;

---- =============================
---- 7. VISTA DE ORIGEN DOCUMENTAL
---- =============================
--CREATE OR ALTER VIEW vOrigenActivo AS
--SELECT
--    o.idActivo,
--    o.idDocIngresoAlm,
--    o.idDocumentoVenta,
--    o.idOrdenCompra,
--    o.idArticulo,
--    o.idProveedor
--FROM tOrigenActivo o;
GO
/****** Object:  Table [dbo].[tHistorialEstado]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tHistorialEstado](
	[idHistorialEstado] [int] IDENTITY(1,1) NOT NULL,
	[idActivo] [int] NULL,
	[idEstadoAnterior] [int] NULL,
	[idEstadoNuevo] [int] NULL,
	[fecha] [datetime] NULL,
	[userMod] [nvarchar](15) NULL,
PRIMARY KEY CLUSTERED 
(
	[idHistorialEstado] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[vHistorialEstados]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

---- =============================
---- 4. VISTAS DE HISTORIAL
---- =============================

---- Vista de historial de estados del activo
CREATE   VIEW [dbo].[vHistorialEstados] AS
SELECT
    he.idHistorialEstado,
    he.idActivo,
    e1.nombre AS EstadoAnterior,
    e2.nombre AS EstadoNuevo,
    he.fecha,
    he.userMod
FROM tHistorialEstado he
LEFT JOIN tEstadoActivo e1 ON e1.idEstadoActivo = he.idEstadoAnterior
LEFT JOIN tEstadoActivo e2 ON e2.idEstadoActivo = he.idEstadoNuevo;

---- Vista de historial de ubicación
--CREATE OR ALTER VIEW vHistorialUbicacion AS
--SELECT
--    hu.idHistorialUbicacion,
--    hu.idActivo,
--    a1.nombre AS AmbienteAnterior,
--    a2.nombre AS AmbienteNuevo,
--    hu.idResponsableAnterior,
--    hu.idResponsableNuevo,
--    hu.fecha,
--    hu.userMod
--FROM tHistorialUbicacion hu
--LEFT JOIN tAmbiente a1 ON a1.idAmbiente = hu.idAmbienteAnterior
--LEFT JOIN tAmbiente a2 ON a2.idAmbiente = hu.idAmbienteNuevo;

---- Vista de historial de serie
--CREATE OR ALTER VIEW vHistorialSerie AS
--SELECT
--    hs.idHistorialSerie,
--    hs.idActivo,
--    hs.serieAnterior,
--    hs.serieNueva,
--    hs.motivo,
--    hs.fecha,
--    hs.userMod
--FROM tHistorialSerie hs;

---- Vista de historial de valor
--CREATE OR ALTER VIEW vHistorialValorActivo AS
--SELECT
--    hv.idHistorialValor,
--    hv.idActivo,
--    hv.valorAnterior,
--    hv.valorNuevo,
--    hv.motivo,
--    hv.fecha,
--    hv.userMod
--FROM tHistorialValorActivo hv;

---- =============================
---- 5. VISTA DE BAJAS DE ACTIVOS
---- =============================
--CREATE OR ALTER VIEW vBajasActivo AS
--SELECT
--    b.idBaja,
--    b.idActivo,
--    a.codigo,
--    d.nombre AS nombre,
--    b.tipoBaja,
--    b.motivo,
--    b.fechaBaja,
--    b.documentoSoporte,
--    b.observaciones,
--    b.userMod
--FROM tBajasActivo b
--INNER JOIN tActivos a ON a.idActivo = b.idActivo
--LEFT JOIN tActivoDetalle d ON d.idActivo = a.idActivo;

---- =============================
---- 6. VISTA DE MANTENIMIENTOS
---- =============================
--CREATE OR ALTER VIEW vMantenimientos AS
--SELECT
--    m.idMantenimiento,
--    m.idActivo,
--    a.codigo,
--    d.nombre AS nombre,
--    m.idTipoMantenimiento,
--    tm.nombre AS TipoMantenimiento,
--    m.fechaProgramada,
--    m.fechaRealizada,
--    m.descripcion,
--    m.observaciones,
--    m.costoEstimado,
--    m.costoReal,
--    m.idProveedor,
--    m.idResponsable,
--    m.idEstadoMantenimiento,
--    em.nombre AS EstadoMantenimiento,
--    m.fechaRegistro,
--    m.userMod
--FROM tMantenimientos m
--INNER JOIN tActivos a ON a.idActivo = m.idActivo
--LEFT JOIN tActivoDetalle d ON d.idActivo = a.idActivo
--LEFT JOIN tTipoMantenimiento tm ON tm.idTipoMantenimiento = m.idTipoMantenimiento
--LEFT JOIN tEstadoMantenimiento em ON em.idEstadoMantenimiento = m.idEstadoMantenimiento;

---- =============================
---- 7. VISTA DE ORIGEN DOCUMENTAL
---- =============================
--CREATE OR ALTER VIEW vOrigenActivo AS
--SELECT
--    o.idActivo,
--    o.idDocIngresoAlm,
--    o.idDocumentoVenta,
--    o.idOrdenCompra,
--    o.idArticulo,
--    o.idProveedor
--FROM tOrigenActivo o;
GO
/****** Object:  Table [dbo].[tHistorialUbicacion]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tHistorialUbicacion](
	[idHistorialUbicacion] [int] IDENTITY(1,1) NOT NULL,
	[idActivo] [int] NULL,
	[idAmbienteAnterior] [int] NULL,
	[idAmbienteNuevo] [int] NULL,
	[idResponsableAnterior] [nvarchar](15) NULL,
	[idResponsableNuevo] [nvarchar](15) NULL,
	[fecha] [datetime] NULL,
	[userMod] [nvarchar](15) NULL,
PRIMARY KEY CLUSTERED 
(
	[idHistorialUbicacion] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[vHistorialUbicacion]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vHistorialUbicacion] AS
SELECT
    hu.idHistorialUbicacion,
    hu.idActivo,
    a.codigo AS CodigoActivo,
    ad.nombre AS NombreActivo,
    ambAnt.nombre AS AmbienteAnterior,
    ambNue.nombre AS AmbienteNuevo,
    hu.idResponsableAnterior,
    hu.idResponsableNuevo,
    hu.fecha,
    hu.userMod
FROM tHistorialUbicacion hu
INNER JOIN tActivos a ON hu.idActivo = a.idActivo
LEFT JOIN tActivoDetalle ad ON a.idActivo = ad.idActivo
LEFT JOIN tAmbiente ambAnt ON hu.idAmbienteAnterior = ambAnt.idAmbiente
LEFT JOIN tAmbiente ambNue ON hu.idAmbienteNuevo = ambNue.idAmbiente;











GO
/****** Object:  Table [dbo].[tHistorialSerie]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tHistorialSerie](
	[idHistorialSerie] [int] IDENTITY(1,1) NOT NULL,
	[idActivo] [int] NULL,
	[serieAnterior] [nvarchar](100) NULL,
	[serieNueva] [nvarchar](100) NULL,
	[motivo] [nvarchar](255) NULL,
	[fecha] [datetime] NULL,
	[userMod] [nvarchar](15) NULL,
PRIMARY KEY CLUSTERED 
(
	[idHistorialSerie] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[vHistorialSerie]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vHistorialSerie] AS
SELECT
    hs.idHistorialSerie,
    hs.idActivo,
    a.codigo AS CodigoActivo,
    ad.nombre AS NombreActivo,
    hs.serieAnterior,
    hs.serieNueva,
    hs.motivo,
    hs.fecha,
    hs.userMod
FROM tHistorialSerie hs
INNER JOIN tActivos a ON hs.idActivo = a.idActivo
LEFT JOIN tActivoDetalle ad ON a.idActivo = ad.idActivo;










GO
/****** Object:  Table [dbo].[tHistorialValorActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tHistorialValorActivo](
	[idHistorialValor] [int] IDENTITY(1,1) NOT NULL,
	[idActivo] [int] NULL,
	[valorAnterior] [decimal](12, 2) NULL,
	[valorNuevo] [decimal](12, 2) NULL,
	[motivo] [nvarchar](255) NULL,
	[fecha] [datetime] NULL,
	[userMod] [nvarchar](15) NULL,
PRIMARY KEY CLUSTERED 
(
	[idHistorialValor] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[vHistorialValorActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vHistorialValorActivo] AS
SELECT 
    h.idHistorialValor,
    h.idActivo,
    a.codigo AS CodigoActivo,
    ad.nombre AS NombreActivo,
    h.valorAnterior,
    h.valorNuevo,
    h.motivo,
    h.fecha,
    h.userMod
FROM tHistorialValorActivo h
INNER JOIN tActivos a ON h.idActivo = a.idActivo
LEFT JOIN tActivoDetalle ad ON a.idActivo = ad.idActivo;










GO
/****** Object:  Table [dbo].[tBajasActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tBajasActivo](
	[idBaja] [int] IDENTITY(1,1) NOT NULL,
	[idActivo] [int] NOT NULL,
	[tipoBaja] [varchar](50) NOT NULL,
	[motivo] [nvarchar](max) NOT NULL,
	[fechaBaja] [datetime] NOT NULL,
	[documentoSoporte] [nvarchar](100) NULL,
	[observaciones] [nvarchar](max) NULL,
	[userMod] [nvarchar](15) NOT NULL,
PRIMARY KEY CLUSTERED 
(
	[idBaja] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  View [dbo].[vBajasActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


---- =============================
---- 5. VISTA DE BAJAS DE ACTIVOS
---- =============================
CREATE   VIEW [dbo].[vBajasActivo] AS
SELECT
    b.idBaja,
    b.idActivo,
    a.codigo,
    d.nombre AS nombre,
    b.tipoBaja,
    b.motivo,
    b.fechaBaja,
    b.documentoSoporte,
    b.observaciones,
    b.userMod
FROM tBajasActivo b
INNER JOIN tActivos a ON a.idActivo = b.idActivo
LEFT JOIN tActivoDetalle d ON d.idActivo = a.idActivo;

---- =============================
---- 6. VISTA DE MANTENIMIENTOS
---- =============================
--CREATE OR ALTER VIEW vMantenimientos AS
--SELECT
--    m.idMantenimiento,
--    m.idActivo,
--    a.codigo,
--    d.nombre AS nombre,
--    m.idTipoMantenimiento,
--    tm.nombre AS TipoMantenimiento,
--    m.fechaProgramada,
--    m.fechaRealizada,
--    m.descripcion,
--    m.observaciones,
--    m.costoEstimado,
--    m.costoReal,
--    m.idProveedor,
--    m.idResponsable,
--    m.idEstadoMantenimiento,
--    em.nombre AS EstadoMantenimiento,
--    m.fechaRegistro,
--    m.userMod
--FROM tMantenimientos m
--INNER JOIN tActivos a ON a.idActivo = m.idActivo
--LEFT JOIN tActivoDetalle d ON d.idActivo = a.idActivo
--LEFT JOIN tTipoMantenimiento tm ON tm.idTipoMantenimiento = m.idTipoMantenimiento
--LEFT JOIN tEstadoMantenimiento em ON em.idEstadoMantenimiento = m.idEstadoMantenimiento;

---- =============================
---- 7. VISTA DE ORIGEN DOCUMENTAL
---- =============================
--CREATE OR ALTER VIEW vOrigenActivo AS
--SELECT
--    o.idActivo,
--    o.idDocIngresoAlm,
--    o.idDocumentoVenta,
--    o.idOrdenCompra,
--    o.idArticulo,
--    o.idProveedor
--FROM tOrigenActivo o;
GO
/****** Object:  Table [dbo].[tMantenimientos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tMantenimientos](
	[idMantenimiento] [int] IDENTITY(1,1) NOT NULL,
	[idActivo] [int] NOT NULL,
	[idTipoMantenimiento] [int] NOT NULL,
	[fechaProgramada] [date] NULL,
	[fechaRealizada] [date] NULL,
	[descripcion] [nvarchar](max) NULL,
	[observaciones] [nvarchar](max) NULL,
	[costoEstimado] [decimal](12, 2) NULL,
	[costoReal] [decimal](12, 2) NULL,
	[idProveedor] [nvarchar](15) NULL,
	[idResponsable] [nvarchar](15) NULL,
	[idEstadoMantenimiento] [int] NOT NULL,
	[fechaRegistro] [datetime] NULL,
	[userMod] [nvarchar](15) NULL,
PRIMARY KEY CLUSTERED 
(
	[idMantenimiento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tTipoMantenimiento]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tTipoMantenimiento](
	[idTipoMantenimiento] [int] NOT NULL,
	[nombre] [nvarchar](100) NULL,
PRIMARY KEY CLUSTERED 
(
	[idTipoMantenimiento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tEstadoMantenimiento]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tEstadoMantenimiento](
	[idEstadoMantenimiento] [int] NOT NULL,
	[nombre] [nvarchar](50) NULL,
PRIMARY KEY CLUSTERED 
(
	[idEstadoMantenimiento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  View [dbo].[vMantenimientos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

---- =============================
---- 6. VISTA DE MANTENIMIENTOS
---- =============================
CREATE   VIEW [dbo].[vMantenimientos] AS
SELECT
    m.idMantenimiento,
    m.idActivo,
    a.codigo,
    d.nombre AS nombre,
    m.idTipoMantenimiento,
    tm.nombre AS TipoMantenimiento,
    m.fechaProgramada,
    m.fechaRealizada,
    m.descripcion,
    m.observaciones,
    m.costoEstimado,
    m.costoReal,
    m.idProveedor,
    m.idResponsable,
    m.idEstadoMantenimiento,
    em.nombre AS EstadoMantenimiento,
    m.fechaRegistro,
    m.userMod
FROM tMantenimientos m
INNER JOIN tActivos a ON a.idActivo = m.idActivo
LEFT JOIN tActivoDetalle d ON d.idActivo = a.idActivo
LEFT JOIN tTipoMantenimiento tm ON tm.idTipoMantenimiento = m.idTipoMantenimiento
LEFT JOIN tEstadoMantenimiento em ON em.idEstadoMantenimiento = m.idEstadoMantenimiento;

---- =============================
---- 7. VISTA DE ORIGEN DOCUMENTAL
---- =============================
--CREATE OR ALTER VIEW vOrigenActivo AS
--SELECT
--    o.idActivo,
--    o.idDocIngresoAlm,
--    o.idDocumentoVenta,
--    o.idOrdenCompra,
--    o.idArticulo,
--    o.idProveedor
--FROM tOrigenActivo o;
GO
/****** Object:  View [dbo].[vOrigenActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

---- =============================
---- 7. VISTA DE ORIGEN DOCUMENTAL
---- =============================
CREATE   VIEW [dbo].[vOrigenActivo] AS
SELECT
    o.idActivo,
    o.idDocIngresoAlm,
    o.idDocumentoVenta,
    o.idOrdenCompra,
    o.idArticulo,
    o.idProveedor
FROM tOrigenActivo o;
GO
/****** Object:  View [dbo].[vResumen_ActivosPorEstado]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vResumen_ActivosPorEstado] AS
SELECT 
    e.nombre AS Estado,
    COUNT(*) AS TotalActivos
FROM tActivos a
JOIN tEstadoActivo e ON a.idEstado = e.idEstadoActivo
GROUP BY e.nombre;

GO
/****** Object:  View [dbo].[vResumen_ActivosPorResponsable]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vResumen_ActivosPorResponsable] AS
SELECT 
    u.idResponsable,
    COUNT(*) AS TotalActivos
FROM tUbicacionActivo u
WHERE u.esActual = 1
GROUP BY u.idResponsable;


GO
/****** Object:  View [dbo].[vResumen_ActivosPorAmbiente]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vResumen_ActivosPorAmbiente] AS
SELECT 
    amb.nombre AS Ambiente,
    COUNT(*) AS TotalActivos
FROM tUbicacionActivo u
JOIN tAmbiente amb ON u.idAmbiente = amb.idAmbiente
WHERE u.esActual = 1
GROUP BY amb.nombre;



GO
/****** Object:  View [dbo].[vResumen_ActivosPorCategoria]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vResumen_ActivosPorCategoria] AS
SELECT 
    c.nombre AS Categoria,
    COUNT(*) AS TotalActivos
FROM tActivos a
JOIN tCategoriasActivo c ON a.idCategoria = c.idCategoria
GROUP BY c.nombre;




GO
/****** Object:  View [dbo].[vResumen_ActivosDadosDeBaja]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vResumen_ActivosDadosDeBaja] AS
SELECT 
    b.tipoBaja,
    COUNT(*) AS Total
FROM tBajasActivo b
GROUP BY b.tipoBaja;





GO
/****** Object:  View [dbo].[vReporte_ActivosOperativos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vReporte_ActivosOperativos] AS
SELECT 
    a.idActivo,
    a.codigo,
    ad.nombre,
    ad.serie,
    ad.valorAdquisicion,
    ad.vidaUtil,
    ad.fechaAdquisicion,
    c.nombre AS Categoria,
    e.nombre AS Estado,
    amb.nombre AS Ambiente,
    u.idResponsable
FROM tActivos a
JOIN tActivoDetalle ad ON ad.idActivo = a.idActivo
LEFT JOIN tCategoriasActivo c ON a.idCategoria = c.idCategoria
JOIN tEstadoActivo e ON a.idEstado = e.idEstadoActivo
LEFT JOIN tUbicacionActivo u ON a.idActivo = u.idActivo AND u.esActual = 1
LEFT JOIN tAmbiente amb ON u.idAmbiente = amb.idAmbiente
WHERE a.idEstado IN (SELECT idEstadoActivo FROM tEstadoActivo WHERE esFinal = 0);






GO
/****** Object:  View [dbo].[vReporte_HistorialActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vReporte_HistorialActivo] AS
SELECT 
    a.idActivo,
    a.codigo,
    he.fecha AS FechaCambioEstado,
    ea.nombre AS EstadoAnterior,
    en.nombre AS EstadoNuevo,
    hu.fecha AS FechaCambioUbicacion,
    ambAnt.nombre AS AmbienteAnterior,
    ambNuevo.nombre AS AmbienteNuevo,
    hv.fecha AS FechaCambioValor,
    hv.valorAnterior,
    hv.valorNuevo
FROM tActivos a
LEFT JOIN tHistorialEstado he ON a.idActivo = he.idActivo
LEFT JOIN tEstadoActivo ea ON he.idEstadoAnterior = ea.idEstadoActivo
LEFT JOIN tEstadoActivo en ON he.idEstadoNuevo = en.idEstadoActivo
LEFT JOIN tHistorialUbicacion hu ON a.idActivo = hu.idActivo
LEFT JOIN tAmbiente ambAnt ON hu.idAmbienteAnterior = ambAnt.idAmbiente
LEFT JOIN tAmbiente ambNuevo ON hu.idAmbienteNuevo = ambNuevo.idAmbiente
LEFT JOIN tHistorialValorActivo hv ON a.idActivo = hv.idActivo;







GO
/****** Object:  View [dbo].[vReporte_Mantenimientos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vReporte_Mantenimientos] AS
SELECT 
    m.idMantenimiento,
    a.codigo AS CodigoActivo,
    tm.nombre AS TipoMantenimiento,
    em.nombre AS EstadoMantenimiento,
    m.fechaProgramada,
    m.fechaRealizada,
    m.descripcion,
    m.costoEstimado,
    m.costoReal,
    m.idProveedor,
    m.idResponsable
FROM tMantenimientos m
JOIN tActivos a ON m.idActivo = a.idActivo
JOIN tTipoMantenimiento tm ON m.idTipoMantenimiento = tm.idTipoMantenimiento
JOIN tEstadoMantenimiento em ON m.idEstadoMantenimiento = em.idEstadoMantenimiento;








GO
/****** Object:  View [dbo].[vReporte_BajasActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vReporte_BajasActivo] AS
SELECT 
    b.idBaja,
    a.codigo AS CodigoActivo,
    b.tipoBaja,
    b.motivo,
    b.fechaBaja,
    b.documentoSoporte,
    b.observaciones,
    b.userMod
FROM tBajasActivo b
JOIN tActivos a ON b.idActivo = a.idActivo;








GO
/****** Object:  View [dbo].[vActivosConsolidado]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vActivosConsolidado]
AS
SELECT        a.idActivo, a.codigo, a.tipoRegistro, COALESCE (ad.nombre, art.Descripcion_articulo, N'Sin Nombre') AS NombreActivo, ad.serie, ad.valorAdquisicion, ad.vidaUtil, ad.garantia, ad.fechaAdquisicion, ad.fechaFinGarantia, 
                         ua.idEmpresa, ua.idSucursal, ua.idAmbiente, amb.nombre AS NombreAmbiente, ua.idResponsable, ea.idEstadoActivo, ea.nombre AS Estado, ca.idCategoria, ca.nombre AS Categoria, oa.idDocIngresoAlm, oa.idDocumentoVenta, 
                         oa.idOrdenCompra, oa.idArticulo, oa.idProveedor, a.enUso, a.esPadre, a.idActivoPadre, a.fechaRegistro
FROM            dbo.tActivos AS a LEFT OUTER JOIN
                         dbo.tActivoDetalle AS ad ON a.idActivo = ad.idActivo LEFT OUTER JOIN
                         dbo.tUbicacionActivo AS ua ON a.idActivo = ua.idActivo AND ua.esActual = 1 LEFT OUTER JOIN
                         dbo.tAmbiente AS amb ON ua.idAmbiente = amb.idAmbiente LEFT OUTER JOIN
                         dbo.tEstadoActivo AS ea ON a.idEstado = ea.idEstadoActivo LEFT OUTER JOIN
                         dbo.tCategoriasActivo AS ca ON a.idCategoria = ca.idCategoria LEFT OUTER JOIN
                         dbo.tOrigenActivo AS oa ON a.idActivo = oa.idActivo LEFT OUTER JOIN
                         dbo.vArticulos AS art ON oa.idArticulo = art.idarticulo LEFT OUTER JOIN
                         dbo.vEntidadExternaGeneralProveedor AS prov ON prov.Documento = oa.idProveedor
GO
/****** Object:  View [dbo].[vComponentesActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vComponentesActivo] AS
SELECT
    hijo.idActivo AS IdComponente,
    hijo.codigo AS CodigoComponente,
    adH.nombre AS NombreComponente,
    adH.serie AS SerieComponente,
    adH.valorAdquisicion AS ValorComponente,
    adH.vidaUtil AS VidaUtilComponente,

    padre.idActivo AS IdPadre,
    padre.codigo AS CodigoPadre,
    adP.nombre AS NombrePadre,
    adP.serie AS SeriePadre,
    adP.valorAdquisicion AS ValorPadre,

    -- Ubicación y estado del componente
    ubH.idAmbiente,
    amb.nombre AS NombreAmbiente,
    ubH.idResponsable,
    estH.nombre AS EstadoComponente,

    -- Fecha de asignación
    ubH.fechaInicio AS FechaAsignacion

FROM tActivos hijo
INNER JOIN tActivos padre ON hijo.idActivoPadre = padre.idActivo AND hijo.idActivoPadre IS NOT NULL

LEFT JOIN tActivoDetalle adH ON hijo.idActivo = adH.idActivo
LEFT JOIN tActivoDetalle adP ON padre.idActivo = adP.idActivo

LEFT JOIN tUbicacionActivo ubH ON hijo.idActivo = ubH.idActivo AND ubH.esActual = 1
LEFT JOIN tAmbiente amb ON ubH.idAmbiente = amb.idAmbiente
LEFT JOIN tEstadoActivo estH ON hijo.idEstado = estH.idEstadoActivo;









GO
/****** Object:  View [dbo].[vHistorialEstado]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vHistorialEstado] AS
SELECT
    he.idHistorialEstado,
    he.idActivo,
    a.codigo AS CodigoActivo,
    ad.nombre AS NombreActivo,
    ea.nombre AS EstadoAnterior,
    en.nombre AS EstadoNuevo,
    he.fecha,
    he.userMod
FROM tHistorialEstado he
INNER JOIN tActivos a ON he.idActivo = a.idActivo
LEFT JOIN tActivoDetalle ad ON a.idActivo = ad.idActivo
LEFT JOIN tEstadoActivo ea ON he.idEstadoAnterior = ea.idEstadoActivo
LEFT JOIN tEstadoActivo en ON he.idEstadoNuevo = en.idEstadoActivo;













GO
/****** Object:  View [dbo].[vMantenimientosActivos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vMantenimientosActivos] AS
SELECT
    m.idMantenimiento,
    m.idActivo,
    a.codigo AS CodigoActivo,
    ad.nombre AS NombreActivo,
    tm.nombre AS TipoMantenimiento,
    em.nombre AS EstadoMantenimiento,
    m.fechaProgramada,
    m.fechaRealizada,
    m.descripcion,
    m.observaciones,
    m.costoEstimado,
    m.costoReal,
    m.idProveedor,
    m.idResponsable,
    m.fechaRegistro,
    m.userMod
FROM tMantenimientos m
INNER JOIN tActivos a ON m.idActivo = a.idActivo
LEFT JOIN tActivoDetalle ad ON a.idActivo = ad.idActivo
LEFT JOIN tTipoMantenimiento tm ON m.idTipoMantenimiento = tm.idTipoMantenimiento
LEFT JOIN tEstadoMantenimiento em ON m.idEstadoMantenimiento = em.idEstadoMantenimiento;












GO
/****** Object:  View [dbo].[vBajasActivos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vBajasActivos] AS
SELECT
    b.idBaja,
    b.idActivo,
    a.codigo AS CodigoActivo,
    ad.nombre AS NombreActivo,
    b.tipoBaja,
    b.motivo,
    b.documentoSoporte,
    b.observaciones,
    b.fechaBaja,
    b.userMod
FROM tBajasActivo b
INNER JOIN tActivos a ON b.idActivo = a.idActivo
LEFT JOIN tActivoDetalle ad ON a.idActivo = ad.idActivo;
GO
/****** Object:  View [dbo].[vUbicacionActualActivos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vUbicacionActualActivos] AS
SELECT
    ua.idActivo,
    a.codigo AS CodigoActivo,
    ad.nombre AS NombreActivo,
    amb.nombre AS NombreAmbiente,
    amb.idSucursal,
    amb.idEmpresa,
    ua.idResponsable,
    ua.fechaInicio,
    ua.fechaFin,
    ua.esActual
FROM tUbicacionActivo ua
INNER JOIN tActivos a ON ua.idActivo = a.idActivo
LEFT JOIN tActivoDetalle ad ON a.idActivo = ad.idActivo
LEFT JOIN tAmbiente amb ON ua.idAmbiente = amb.idAmbiente
WHERE ua.esActual = 1;

GO
/****** Object:  View [dbo].[vResumenActivosPorEstado]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vResumenActivosPorEstado] AS
SELECT
    ea.nombre AS Estado,
    COUNT(a.idActivo) AS Cantidad
FROM tActivos a
INNER JOIN tEstadoActivo ea ON a.idEstado = ea.idEstadoActivo
GROUP BY ea.nombre;


GO
/****** Object:  View [dbo].[vResumenActivosPorCategoria]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vResumenActivosPorCategoria] AS
SELECT
    c.nombre AS Categoria,
    COUNT(a.idActivo) AS Cantidad
FROM tActivos a
LEFT JOIN tCategoriasActivo c ON a.idCategoria = c.idCategoria
GROUP BY c.nombre;


GO
/****** Object:  View [dbo].[vResumenActivosPorAmbiente]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vResumenActivosPorAmbiente] AS
SELECT
    amb.nombre AS Ambiente,
    COUNT(ua.idActivo) AS Cantidad
FROM tUbicacionActivo ua
INNER JOIN tAmbiente amb ON ua.idAmbiente = amb.idAmbiente
WHERE ua.esActual = 1
GROUP BY amb.nombre;



GO
/****** Object:  View [dbo].[vComponentesPorActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vComponentesPorActivo] AS
SELECT 
    a.idActivo,
    a.codigo AS CodigoActivo,
    ad.nombre AS NombreActivo,
    c.idActivo AS IdComponente,
    c.codigo AS CodigoComponente,
    cd.nombre AS NombreComponente
FROM tActivos a
LEFT JOIN tActivoDetalle ad ON a.idActivo = ad.idActivo
LEFT JOIN tActivos c ON c.idActivoPadre = a.idActivo
LEFT JOIN tActivoDetalle cd ON c.idActivo = cd.idActivo
WHERE a.esPadre = 1;




GO
/****** Object:  View [dbo].[vOrigenActivoDocumento]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vOrigenActivoDocumento] AS
SELECT 
    a.idActivo,
    a.codigo AS CodigoActivo,
    ad.nombre AS NombreActivo,
    oa.idDocIngresoAlm,
    oa.idDocumentoVenta,
    oa.idOrdenCompra,
    oa.idArticulo,
    oa.idProveedor
FROM tActivos a
INNER JOIN tOrigenActivo oa ON a.idActivo = oa.idActivo
LEFT JOIN tActivoDetalle ad ON a.idActivo = ad.idActivo
WHERE a.tipoRegistro = 'Documento';





GO
/****** Object:  View [dbo].[vOrigenActivoManual]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vOrigenActivoManual] AS
SELECT 
    a.idActivo,
    a.codigo AS CodigoActivo,
    ad.nombre AS NombreActivo,
    a.fechaRegistro
FROM tActivos a
LEFT JOIN tActivoDetalle ad ON a.idActivo = ad.idActivo
WHERE a.tipoRegistro = 'Manual';






GO
/****** Object:  View [dbo].[vHistorialUbicacionActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vHistorialUbicacionActivo] AS
SELECT 
    h.idHistorialUbicacion,
    h.idActivo,
    a.codigo AS CodigoActivo,
    ad.nombre AS NombreActivo,
    h.idAmbienteAnterior,
    ambA.nombre AS AmbienteAnterior,
    h.idAmbienteNuevo,
    ambN.nombre AS AmbienteNuevo,
    h.idResponsableAnterior,
    h.idResponsableNuevo,
    h.fecha,
    h.userMod
FROM tHistorialUbicacion h
INNER JOIN tActivos a ON h.idActivo = a.idActivo
LEFT JOIN tActivoDetalle ad ON a.idActivo = ad.idActivo
LEFT JOIN tAmbiente ambA ON h.idAmbienteAnterior = ambA.idAmbiente
LEFT JOIN tAmbiente ambN ON h.idAmbienteNuevo = ambN.idAmbiente;







GO
/****** Object:  View [dbo].[vHistorialEstadoActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vHistorialEstadoActivo] AS
SELECT 
    h.idHistorialEstado,
    h.idActivo,
    a.codigo AS CodigoActivo,
    ad.nombre AS NombreActivo,
    h.idEstadoAnterior,
    ea.nombre AS EstadoAnterior,
    h.idEstadoNuevo,
    en.nombre AS EstadoNuevo,
    h.fecha,
    h.userMod
FROM tHistorialEstado h
INNER JOIN tActivos a ON h.idActivo = a.idActivo
LEFT JOIN tActivoDetalle ad ON a.idActivo = ad.idActivo
LEFT JOIN tEstadoActivo ea ON h.idEstadoAnterior = ea.idEstadoActivo
LEFT JOIN tEstadoActivo en ON h.idEstadoNuevo = en.idEstadoActivo;








GO
/****** Object:  View [dbo].[vHistorialSerieActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vHistorialSerieActivo] AS
SELECT 
    h.idHistorialSerie,
    h.idActivo,
    a.codigo AS CodigoActivo,
    ad.nombre AS NombreActivo,
    h.serieAnterior,
    h.serieNueva,
    h.motivo,
    h.fecha,
    h.userMod
FROM tHistorialSerie h
INNER JOIN tActivos a ON h.idActivo = a.idActivo
LEFT JOIN tActivoDetalle ad ON a.idActivo = ad.idActivo;









GO
/****** Object:  View [dbo].[vUnidadesDeNegocio]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vUnidadesDeNegocio]
AS
SELECT cod_UnidadNeg, Cod_Empresa, codUbigeo, idTipoZV, Nombre_local, Direccion_local, fono_local, Movil_local, estadoFuncionamiento, idLocacionEntExterna, CodUnidadNegocioSUNAT, user_mod, fecha_mod
FROM   bdGestionLubriseng.dbo.tUnidadNegocio
WHERE  (estadoFuncionamiento = '1')
GO
/****** Object:  View [dbo].[vActivosResumen]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vActivosResumen]
AS
SELECT        a.idActivo, a.codigo, COALESCE (ad.nombre, art.Descripcion_articulo, N'Sin Nombre') AS NombreActivo, ea.idEstadoActivo, ea.nombre AS Estado, ca.idCategoria, ua.idEmpresa, ua.idSucursal, ua.idAmbiente, 
                         amb.nombre AS NombreAmbiente, ua.idResponsable, ISNULL(em.NombreTrabajador, N'No Asignado') AS Responsable, ISNULL(ad.serie, N'Sin Serie') AS Serie, ad.valorAdquisicion, CONVERT(varchar(16), a.fechaRegistro, 120) 
                         AS fechaRegistro
FROM            dbo.tActivos AS a LEFT OUTER JOIN
                         dbo.tActivoDetalle AS ad ON a.idActivo = ad.idActivo LEFT OUTER JOIN
                         dbo.tUbicacionActivo AS ua ON a.idActivo = ua.idActivo AND ua.esActual = 1 LEFT OUTER JOIN
                         dbo.tAmbiente AS amb ON ua.idAmbiente = amb.idAmbiente LEFT OUTER JOIN
                         dbo.tEstadoActivo AS ea ON a.idEstado = ea.idEstadoActivo LEFT OUTER JOIN
                         dbo.tCategoriasActivo AS ca ON a.idCategoria = ca.idCategoria LEFT OUTER JOIN
                         dbo.tOrigenActivo AS oa ON a.idActivo = oa.idActivo LEFT OUTER JOIN
                         dbo.vArticulos AS art ON oa.idArticulo = art.idarticulo LEFT OUTER JOIN
                         dbo.vEntidadExternaGeneralProveedor AS prov ON prov.Documento = oa.idProveedor LEFT OUTER JOIN
                         dbo.vUnidadesDeNegocio AS s ON ua.idSucursal = s.cod_UnidadNeg LEFT OUTER JOIN
                         dbo.vEmpleados AS em ON ua.idResponsable = em.codTrabajador
GO
/****** Object:  View [dbo].[vContratos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vContratos]
AS
SELECT CodContrato, FechaRegistro, CodTrabajador, AbreviaturaTDI, NroDocumento, ApellidoPaterno, ApellidoMaterno, PrimerNombre, SegundoNombre, NombreTrabajador, Direccion, Foto, Firma, Cv, Clave, Celular, CorreoPersonal, 
       CodGenero, DescripGenero, FechaNacimiento, EstadoTrabajador, CodRegimenLaboral, DescripcionRL, AbreviaturaRL, CodSituacionLaboral, DescripcionSL, AbreviaturaSL, CodMotivoBaja, DescripcionMB, AbreviaturaMB, 
       FechaAltaInicio, FechaAltaFin, CodRegimenSalud, DescripcionRS, AbreviaturaRS, CodEps, RucEPS, DescripcionEPS, FechaRegSaludInicio, FechaRegSaludFin, CodRegimenPensionario, DescripcionRP, AbreviaturaRP, 
       FechaRegPensionarioInicio, FechaRegPensionarioFin, CUSPP, Comision, CodTipoTrabajador, DescripcionTT, AbreviaturaTT, CodSituacionEducativa, DescripcionSE, AbreviaturaSE, CodCategoriaOcupacional, DescripcionCO, 
       CodOcupacionLaboral, DescripcionOL, CodTipoContrato, codTCSunat, DescripcionTC, CodTipoPago, DescripcionTP, CodPeriodicidad, DescripcionP, RemuneracionBasica, JornadaTrabajoMaxima, JornadaAtipicaAcumulativa, 
       TrabajoHorarioNocturno, CodSituacionEspecial, DescripcionSES, AbreviaturaSES, Discapacitado, Sindicalizado, AportaSCTR, CoberturaPension, CoberturaSalud, FechaInicioCobertura, FechaFinCobertura, CodEmpresa, 
       RucEmpresa, RazonEmpresa, DireccionEmpresa, CodLocacion, CodUnidadNegocioSUNAT, Nombre_local, Direccion_local, CodArea, NombreArea, FechaInicioLabores, FechaTermino, FechaFirma, TallaCamisa, TallaPolo, 
       TallaPantalon, TallaOverol, TallaBotas, Documento, ObservacionesContrato, EstadoActual, Estado, Percibe5ta, TieneConvenio, CodConvenioPais, DescripcionCP, UserUpdate, FechaUpdate, CodOcupacionLaboralInterna, 
       DescOcupacionLabInterna, CodigoAutogenerado, TipoSangre, DescripEC, codPais, codSunatPais, NombrePais, codDpto, CodDptoSunat, NombreDpto, codProv, codProvSunat, NombreProvincia, CodDistrito, codDistSunat, 
       NombreDistrito, CodTipoVia, CodTipoViaSunat, DescripcionTipoVia, NombreVia, NroVia, CodZona, codZRSunat, DescripcionZR, NombreZona, CodTipoDireccion, DescripcionTD, Referencia, CodNacionalidad, DescripcionNac, 
       ObservacionesTrabajador, CorreoAsignado, CodGuardiaTurno, email_empresa, ActurizadoRecojo, TieneAsigFamiliar, AbreEmpresa, NombreComercial, codUndNegUbicado, NombreAsistencia
FROM   bdRecursosHumanos.dbo.vcontratos
GO
/****** Object:  View [dbo].[vEmpresas]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vEmpresas]
AS
SELECT cod_empresa, Razon_empresa, Direccion_empresa, Ruc_empresa, fono_empresa, idEntExterna, AbreEmpresa, EmisionElectronica, correofacturacion
FROM   bdGestionLubriseng.dbo.vEmpresas AS vEmpresas_1
GO
/****** Object:  View [dbo].[vListadoDeArticulosPorDocIngresoAlmacen]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vListadoDeArticulosPorDocIngresoAlmacen]
AS
SELECT ia.idIngAlmacen AS IdIngAlmMax, ia.FechaIngreso AS FechaIng, art.idarticulo, dia.FechaEmision AS FechaEmi, dia.idDocIngAlmacen, ee.Documento, ee.RazonSocial, mon.NombreMoneda, det.CantIng, umv.AbreUMVenta, 
       dia.TasaIGV, CONVERT(numeric(7, 2), det.PrecioUnitario) AS PrecioSinIgv, CONVERT(numeric(7, 2), det.PrecioUnitario * (dia.TasaIGV / 100 + 1)) AS PrecioMasIgv, CONVERT(numeric(7, 2), 
       det.PrecioUnitario * (dia.TasaIGV / 100 + 1) * det.CantIng) AS ImporteTotal, mon.codMoneda, un.cod_UnidadNeg, dia.NumeroDocumento, dia.SerieDocumento, eia.IdTipoEstadoIngreso, un.Cod_Empresa, eia.EstActual, 
       umv.CodUMBase, um.AbrevUM, umv.CantEquivalenteBase, CONVERT(numeric(7, 2), det.PrecioUnitario * (dia.TasaIGV / 100 + 1) / umv.CantEquivalenteBase) AS PrecioUMBaseIGV, dia.RefPrecios, tcm.Compra AS tcCompra, 
       tcm.Venta AS tcVenta, un.Nombre_local, dia.idTipoComp, ae.codAlmacen, det.CantIng * umv.CantEquivalenteBase AS CantTotalIngresadaEquivalente, art.idGrupoProd, ga.idLineaProd
FROM   bdGestionLubriseng.dbo.tEstadoIngresoAlmacen AS eia INNER JOIN
       bdGestionLubriseng.dbo.tUnidadMedVenta AS umv INNER JOIN
       bdGestionLubriseng.dbo.tArticulo AS art INNER JOIN
       bdGestionLubriseng.dbo.tGrupoArticulo AS ga ON art.idGrupoProd = ga.idGrupoProd INNER JOIN
       bdGestionLubriseng.dbo.tDetalleIngAlmacen AS det ON art.idarticulo = det.idArticulo ON umv.CodUMVenta = det.CodUMVenta INNER JOIN
       bdGestionLubriseng.dbo.TIngresoAlmacen AS ia INNER JOIN
       bdGestionLubriseng.dbo.tDocumentoIngresoAlmacen AS dia INNER JOIN
       bdGestionLubriseng.dbo.tMoneda AS mon ON dia.CodMoneda = mon.codMoneda INNER JOIN
       bdGestionLubriseng.dbo.vEntidadExternaGeneral AS ee ON dia.idEntidadExterna = ee.Id ON ia.idIngAlmacen = dia.idIngAlmacen ON det.idIngAlmacen = ia.idIngAlmacen ON eia.idIngAlmacen = ia.idIngAlmacen INNER JOIN
       bdGestionLubriseng.dbo.tAlmacenEmpresa AS ae INNER JOIN
       bdGestionLubriseng.dbo.tUnidadNegocio AS un ON ae.codUnidadNeg = un.cod_UnidadNeg ON ia.codAlmacen = ae.codAlmacen INNER JOIN
       bdGestionLubriseng.dbo.tUnidad_Medida AS um ON umv.CodUMBase = um.CodUM LEFT OUTER JOIN
       bdGestionLubriseng.dbo.tTipoCambioMoneda AS tcm ON dia.FechaEmision = tcm.Fecha
WHERE  (eia.EstActual = '1') AND (dia.RefPrecios = '1') AND (det.EsPromocion NOT IN ('1')) AND (ga.idLineaProd = 11)
GO
/****** Object:  View [dbo].[vListadoDeArticulosPorDocumentoDeVenta]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vListadoDeArticulosPorDocumentoDeVenta]
AS
SELECT FechaEmi, NombreMoneda, Cantidad, AbreUMVenta, SubTotalDetalle, ImporteItemVta, ImporteItemUMB, RazonSocial, Serie_Documento, Nro_Documento, idDocumentoVta, Nombre_local, idArtServDetDocVta, cod_UnidadNeg, 
       AplicaIGV, EmitidoPor, codUMBase, AbrevUM, CodUMVenta, Cod_Empresa, IdTipoComp, Abreviatura, DescBreve_TipoComp, codAlmacen, CantidadSalidaEquivalente
FROM   bdGestionLubriseng.dbo.vmListadoDeArticulosPorDocumentoDeVenta
GO
/****** Object:  View [dbo].[vUnidadesEmpresa]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[vUnidadesEmpresa]
AS
SELECT cod_empresa, Razon_empresa, Direccion_empresa, Ruc_empresa, fono_empresa, cod_UnidadNeg, codUbigeo, Nombre_local, Direccion_local, fono_local, Movil_local, estadoFuncionamiento, Pais, NombreDptoRegion, 
       NombreProvincia, NombreDistrito, CodUbigeoSunat, idLocacionEntExterna, idEntExterna, CodUnidadNegocioSUNAT
FROM   bdGestionLubriseng.dbo.vUnidadesEmpresa AS vUnidadesEmpresa_1
GO
/****** Object:  Table [dbo].[tDetalleMovimiento]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tDetalleMovimiento](
	[idDetalleMovimiento] [int] IDENTITY(1,1) NOT NULL,
	[idMovimiento] [int] NOT NULL,
	[idActivo] [int] NOT NULL,
	[idTipoMovimiento] [int] NOT NULL,
	[idAmbienteAnterior] [int] NULL,
	[idAmbienteNuevo] [int] NULL,
	[idResponsableAnterior] [nvarchar](15) NULL,
	[idResponsableNuevo] [nvarchar](15) NULL,
	[idAutorizador] [nvarchar](15) NULL,
	[fecha] [datetime] NULL,
	[userMod] [nvarchar](15) NULL,
PRIMARY KEY CLUSTERED 
(
	[idDetalleMovimiento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tLogAuditoria]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tLogAuditoria](
	[idLog] [int] IDENTITY(1,1) NOT NULL,
	[tabla] [nvarchar](100) NULL,
	[idRegistro] [int] NULL,
	[campo] [nvarchar](100) NULL,
	[valorAnterior] [nvarchar](max) NULL,
	[valorNuevo] [nvarchar](max) NULL,
	[fecha] [datetime] NULL,
	[usuario] [nvarchar](15) NULL,
PRIMARY KEY CLUSTERED 
(
	[idLog] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tMenu]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tMenu](
	[CodMenu] [int] IDENTITY(1,1) NOT NULL,
	[NombreMenu] [nvarchar](250) NOT NULL,
	[MenuRuta] [nvarchar](250) NOT NULL,
	[MenuIdentificador] [nvarchar](150) NOT NULL,
	[MenuIcono] [nvarchar](50) NOT NULL,
	[MenuGrupo] [nvarchar](100) NOT NULL,
	[MenuGrupoIcono] [nvarchar](50) NOT NULL,
	[Estado] [bit] NOT NULL,
	[UserUpdate] [nvarchar](15) NULL,
	[FechaUpdate] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[CodMenu] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tMovimientos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tMovimientos](
	[idMovimiento] [int] IDENTITY(1,1) NOT NULL,
	[codigoMovimiento] [nvarchar](20) NULL,
	[idTipoMovimiento] [int] NULL,
	[fechaMovimiento] [datetime] NULL,
	[userMod] [nvarchar](15) NULL,
PRIMARY KEY CLUSTERED 
(
	[idMovimiento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tPermisos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tPermisos](
	[CodPermiso] [int] IDENTITY(1,1) NOT NULL,
	[CodMenu] [int] NOT NULL,
	[IdRol] [int] NOT NULL,
	[Permiso] [bit] NOT NULL,
	[UserUpdate] [nvarchar](15) NULL,
	[FechaUpdate] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[CodPermiso] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tRoles]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tRoles](
	[IdRol] [int] IDENTITY(1,1) NOT NULL,
	[NombreRol] [nvarchar](100) NOT NULL,
	[Estado] [bit] NOT NULL,
	[UserUpdate] [nvarchar](15) NULL,
	[FechaUpdate] [datetime] NULL,
 CONSTRAINT [PK_tRoles] PRIMARY KEY CLUSTERED 
(
	[IdRol] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[tTipoMovimiento]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[tTipoMovimiento](
	[idTipoMovimiento] [int] IDENTITY(1,1) NOT NULL,
	[nombre] [nvarchar](50) NOT NULL,
	[descripcion] [nvarchar](255) NULL,
 CONSTRAINT [PK_tTipoMovimiento] PRIMARY KEY CLUSTERED 
(
	[idTipoMovimiento] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (1, NULL, NULL, NULL, NULL, CAST(50.00 AS Decimal(12, 2)), 5, 1, CAST(N'2025-07-18' AS Date), NULL, N'72966380', CAST(N'2025-07-18T08:35:44.960' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (2, NULL, NULL, N'XAGHSGD26A', N'Utensilio color amarillo', CAST(50.00 AS Decimal(12, 2)), 5, 1, CAST(N'2025-07-18' AS Date), NULL, N'72966380', CAST(N'2025-07-18T09:12:32.137' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (4, N'Alicate de cortes', N'Utensilio con mango color rojo', N'ALCX567S54', N'Detalle de torcedura en el mango', CAST(32.00 AS Decimal(12, 2)), 5, 1, CAST(N'2025-10-15' AS Date), CAST(N'2025-10-15' AS Date), N'72966380', CAST(N'2025-07-18T09:26:07.100' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (5, N'Alicate de cortes', N'Utensilio con mango color rojo', N'ALCX567S54', N'Detalle de torcedura en el mango', CAST(32.00 AS Decimal(12, 2)), 5, 1, CAST(N'2025-10-15' AS Date), CAST(N'2025-10-15' AS Date), N'72966380', CAST(N'2025-07-18T09:26:07.100' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (6, NULL, NULL, N'ALC5656BG56', N'', CAST(33.52 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-18' AS Date), NULL, N'72966380', CAST(N'2025-07-18T16:51:14.187' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (7, NULL, NULL, N'ALC5656BG56', N'', CAST(33.52 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-18' AS Date), NULL, N'72966380', CAST(N'2025-07-18T16:51:14.187' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (8, NULL, NULL, N'DIT8876SG24', N'', CAST(175.50 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-18' AS Date), NULL, N'72966380', CAST(N'2025-07-18T16:51:14.203' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (9, NULL, NULL, N'DIT8876SG24', N'', CAST(175.50 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-18' AS Date), NULL, N'72966380', CAST(N'2025-07-18T16:51:14.203' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (10, NULL, NULL, N'DIT8876SG24', N'', CAST(175.50 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-18' AS Date), NULL, N'72966380', CAST(N'2025-07-18T16:51:14.217' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (11, NULL, NULL, N'ALCDUP098872', N'', CAST(12.50 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-19' AS Date), NULL, N'72966380', CAST(N'2025-07-19T13:19:56.387' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (12, NULL, NULL, N'ALCDUP098873', N'', CAST(12.50 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-19' AS Date), NULL, N'72966380', CAST(N'2025-07-19T13:19:56.403' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (13, NULL, NULL, N'MANH563BF71-1', N'Manguera en ingreso multiple', CAST(33.52 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T11:45:51.273' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (14, NULL, NULL, N'MANH563BF71-2', N'Manguera en ingreso multiple', CAST(33.52 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T11:45:51.290' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (15, NULL, NULL, N'MANH563BF71-3', N'Manguera en ingreso multiple', CAST(33.52 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T11:45:51.290' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (16, NULL, NULL, N'MANH563BF71-4', N'Manguera en ingreso multiple', CAST(33.52 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T11:45:51.307' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (17, NULL, NULL, N'EFDM898DC41-1', N'Detergente de motor en ingreso multiple.', CAST(33.52 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T11:45:51.307' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (18, NULL, NULL, N'EFDM898DC41-2', N'Detergente de motor en ingreso multiple.', CAST(33.52 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T11:45:51.307' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (19, NULL, NULL, N'EFDM898DC41-3', N'Detergente de motor en ingreso multiple.', CAST(33.52 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T11:45:51.320' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (20, NULL, NULL, N'EF898DC40-1', N'', CAST(5.33 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T15:58:22.710' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (21, NULL, NULL, N'EF898DC40-2', N'', CAST(5.33 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T15:58:22.710' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (22, NULL, NULL, N'EF898DC40-3', N'', CAST(5.33 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T15:58:22.727' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (23, NULL, NULL, N'EF898DC40-1', N'', CAST(0.00 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:09:42.450' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (24, NULL, NULL, N'EF898DC40-2', N'', CAST(0.00 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:09:42.467' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (25, NULL, NULL, N'EF898DC40-3', N'', CAST(0.00 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:09:42.467' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (26, NULL, NULL, N'EF898DC40-1', N'', CAST(46.66 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:16:38.003' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (27, NULL, NULL, N'EF898DC40-2', N'', CAST(46.66 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:16:38.020' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (28, NULL, NULL, N'EF898DC40-3', N'', CAST(46.66 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:16:38.020' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (29, NULL, NULL, NULL, N'', CAST(15.30 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:17:59.020' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (30, NULL, NULL, NULL, N'', CAST(15.30 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:17:59.033' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (31, NULL, NULL, NULL, N'', CAST(15.30 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:17:59.050' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (32, NULL, NULL, NULL, N'', CAST(15.30 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:17:59.050' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (33, NULL, NULL, N'EF898DC40-1', N'', CAST(16.32 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:19:04.457' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (34, NULL, NULL, N'EF898DC40-2', N'', CAST(16.32 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:19:04.473' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (35, NULL, NULL, N'EF898DC40-3', N'', CAST(16.32 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:19:04.473' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (36, NULL, NULL, N'EF898DC40-4', N'', CAST(16.32 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:19:04.490' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (37, N'Ventilador 3 elice ', N'PRUEBA PARA ELIMINAR', N'EF898DC40-1', N'', CAST(20.54 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:33:23.243' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (38, N'Ventilador 3 elice ', N'PRUEBA PARA ELIMINAR', N'EF898DC40-1', N'', CAST(20.54 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T16:33:23.243' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (39, N'Lapicero', N'', N'MANH563BF7-1', N'', CAST(15.00 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T17:46:34.453' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (40, N'Lapicero', N'', N'MANH563BF7-2', N'', CAST(15.00 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T17:46:34.453' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (41, N'Lapicero', N'', N'MANH563BF7-3', N'', CAST(15.00 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T17:46:34.470' AS DateTime))
INSERT [dbo].[tActivoDetalle] ([idActivo], [nombre], [descripcion], [serie], [observaciones], [valorAdquisicion], [vidaUtil], [garantia], [fechaAdquisicion], [fechaFinGarantia], [userMod], [fechaMod]) VALUES (42, N'Lapicero', N'', N'MANH563BF7-4', N'', CAST(15.00 AS Decimal(12, 2)), 3, 0, CAST(N'2025-07-21' AS Date), NULL, N'72966380', CAST(N'2025-07-21T17:46:34.470' AS DateTime))
GO
SET IDENTITY_INSERT [dbo].[tActivos] ON 

INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (1, N'EDF-00001', N'Documento', 1, 1, 1, NULL, 0, CAST(N'2025-07-18T08:35:44.960' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (2, N'EDF-00002', N'Documento', 1, 1, 1, NULL, 0, CAST(N'2025-07-18T09:12:32.137' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (4, N'EDF-LUB-00001', N'Manual', 1, 1, 1, NULL, 0, CAST(N'2025-07-18T09:26:07.100' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (5, N'EDF-LUB-00002', N'Manual', 1, 1, 1, NULL, 0, CAST(N'2025-07-18T09:26:07.100' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (6, N'MQI-00001', N'Documento', 2, 1, 1, NULL, 0, CAST(N'2025-07-18T16:51:14.187' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (7, N'MQI-00002', N'Documento', 2, 1, 1, NULL, 0, CAST(N'2025-07-18T16:51:14.187' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (8, N'COM-00001', N'Documento', 3, 1, 1, NULL, 0, CAST(N'2025-07-18T16:51:14.203' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (9, N'COM-00002', N'Documento', 3, 1, 1, NULL, 0, CAST(N'2025-07-18T16:51:14.203' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (10, N'COM-00003', N'Documento', 3, 1, 1, NULL, 0, CAST(N'2025-07-18T16:51:14.217' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (11, N'MQI-00003', N'Documento', 2, 1, 1, NULL, 0, CAST(N'2025-07-19T13:19:56.387' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (12, N'MQI-00004', N'Documento', 2, 1, 1, NULL, 0, CAST(N'2025-07-19T13:19:56.403' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (13, N'VEH-00001', N'Documento', 4, 1, 1, NULL, 0, CAST(N'2025-07-21T11:45:51.273' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (14, N'HER-00001', N'Documento', 6, 1, 1, NULL, 0, CAST(N'2025-07-21T11:45:51.290' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (15, N'HER-00002', N'Documento', 6, 1, 1, NULL, 0, CAST(N'2025-07-21T11:45:51.290' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (16, N'HER-00003', N'Documento', 6, 1, 1, NULL, 0, CAST(N'2025-07-21T11:45:51.307' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (17, N'MQI-00005', N'Documento', 2, 1, 1, NULL, 0, CAST(N'2025-07-21T11:45:51.307' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (18, N'MQI-00006', N'Documento', 2, 1, 1, NULL, 0, CAST(N'2025-07-21T11:45:51.307' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (19, N'MQI-00007', N'Documento', 2, 1, 1, NULL, 0, CAST(N'2025-07-21T11:45:51.320' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (20, N'HER-00004', N'Documento', 6, 1, 1, NULL, 0, CAST(N'2025-07-21T15:58:22.710' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (21, N'HER-00005', N'Documento', 6, 1, 1, NULL, 0, CAST(N'2025-07-21T15:58:22.710' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (22, N'HER-00006', N'Documento', 6, 1, 1, NULL, 0, CAST(N'2025-07-21T15:58:22.727' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (23, N'MQI-00008', N'Documento', 2, 1, 1, NULL, 0, CAST(N'2025-07-21T16:09:42.450' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (24, N'MQI-00009', N'Documento', 2, 1, 1, NULL, 0, CAST(N'2025-07-21T16:09:42.467' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (25, N'MQI-00010', N'Documento', 2, 1, 1, NULL, 0, CAST(N'2025-07-21T16:09:42.467' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (26, N'EDF-00003', N'Documento', 1, 1, 1, NULL, 0, CAST(N'2025-07-21T16:16:38.003' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (27, N'EDF-00004', N'Documento', 1, 1, 1, NULL, 0, CAST(N'2025-07-21T16:16:38.020' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (28, N'EDF-00005', N'Documento', 1, 1, 1, NULL, 0, CAST(N'2025-07-21T16:16:38.020' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (29, N'COM-00004', N'Documento', 3, 1, 1, NULL, 0, CAST(N'2025-07-21T16:17:59.020' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (30, N'COM-00005', N'Documento', 3, 1, 1, NULL, 0, CAST(N'2025-07-21T16:17:59.033' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (31, N'COM-00006', N'Documento', 3, 1, 1, NULL, 0, CAST(N'2025-07-21T16:17:59.050' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (32, N'COM-00007', N'Documento', 3, 1, 1, NULL, 0, CAST(N'2025-07-21T16:17:59.050' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (33, N'VEH-00002', N'Documento', 4, 1, 1, NULL, 0, CAST(N'2025-07-21T16:19:04.457' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (34, N'VEH-00003', N'Documento', 4, 1, 1, NULL, 0, CAST(N'2025-07-21T16:19:04.473' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (35, N'VEH-00004', N'Documento', 4, 1, 1, NULL, 0, CAST(N'2025-07-21T16:19:04.473' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (36, N'VEH-00005', N'Documento', 4, 1, 1, NULL, 0, CAST(N'2025-07-21T16:19:04.490' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (37, N'VEH-00006', N'Manual', 4, 1, 1, NULL, 0, CAST(N'2025-07-21T16:33:23.243' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (38, N'VEH-00007', N'Manual', 4, 1, 1, NULL, 0, CAST(N'2025-07-21T16:33:23.243' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (39, N'MQI-00011', N'Manual', 2, 1, 1, NULL, 0, CAST(N'2025-07-21T17:46:34.453' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (40, N'MQI-00012', N'Manual', 2, 1, 1, NULL, 0, CAST(N'2025-07-21T17:46:34.453' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (41, N'MQI-00013', N'Manual', 2, 1, 1, NULL, 0, CAST(N'2025-07-21T17:46:34.470' AS DateTime))
INSERT [dbo].[tActivos] ([idActivo], [codigo], [tipoRegistro], [idCategoria], [idEstado], [enUso], [idActivoPadre], [esPadre], [fechaRegistro]) VALUES (42, N'MQI-00014', N'Manual', 2, 1, 1, NULL, 0, CAST(N'2025-07-21T17:46:34.470' AS DateTime))
SET IDENTITY_INSERT [dbo].[tActivos] OFF
GO
SET IDENTITY_INSERT [dbo].[tAmbiente] ON 

INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (1, N'Gerencia - B80', N'Oficina principal 1er Piso', 1, 1, 1, CAST(N'2025-03-27T16:42:49.420' AS DateTime), NULL, NULL, N'GER       ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (2, N'Oficina de Sistemas B-80', N'Oficina de Sistemas', 1, 2, 1, CAST(N'2025-03-27T16:42:49.420' AS DateTime), NULL, NULL, N'SIS       ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (3, N'Oficina de Contabilidad B-80', N'Oficina de Contabilidad', 1, 3, 1, CAST(N'2025-03-27T16:42:49.420' AS DateTime), NULL, NULL, N'CON       ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (4, N'Almacen Principal B-80', N'Almacen y Oficina de Logistica 1er Piso', 1, 9, 1, CAST(N'2025-03-27T16:42:49.420' AS DateTime), NULL, NULL, N'ALM       ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (5, N'Almacen Tienda B-80', N'Almacen inicial en tienda 1er Piso', 1, 10, 1, CAST(N'2025-03-27T16:42:49.420' AS DateTime), NULL, NULL, N'ALMT      ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (6, N'Almacen Lateral B-80', N'Almacen 1er Piso', 2, 6, 1, CAST(N'2025-03-27T16:42:49.420' AS DateTime), NULL, NULL, N'ALML      ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (7, N'Almacen 3er Piso B-80', N'Almacen de productos de distintas areas', 2, 7, 1, CAST(N'2025-03-27T16:42:49.420' AS DateTime), NULL, NULL, N'ALM3      ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (8, N'Oficina Caja B-80', N'Oficina de pagos 1er Piso', 2, 8, 1, CAST(N'2025-03-27T16:42:49.420' AS DateTime), NULL, NULL, N'CAJ       ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (9, N'Area de ventas B-80', N'Area de venta de productos y servicios', 2, 6, 1, CAST(N'2025-03-27T16:42:49.420' AS DateTime), NULL, NULL, N'VEN       ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (10, N'Area Playa B-80', N'Area de realización de servicios de taller', 3, 5, 1, CAST(N'2025-03-27T16:42:49.420' AS DateTime), NULL, NULL, N'PLA       ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (11, N'Area prueba B90', N'Prueba de envio', 3, 5, 1, CAST(N'2025-06-06T09:00:00.000' AS DateTime), NULL, NULL, N'AP90      ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (12, N'Area Prueba TALL', N'Prueba de envio a nivel de sucursales', 3, 5, 1, CAST(N'2025-06-06T09:47:13.240' AS DateTime), NULL, NULL, N'APTALL    ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (25, N'Sistemas', N'Area de sistemas', 1, 1, 1, CAST(N'2025-07-14T08:58:25.860' AS DateTime), CAST(N'2025-07-14T08:58:25.860' AS DateTime), N'72966380', N'          ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (26, N'Almacen Tienda', N'Almacen tienda 1er Piso', 1, 1, 1, CAST(N'2025-07-14T08:59:02.263' AS DateTime), CAST(N'2025-07-14T08:59:02.263' AS DateTime), N'72966380', N'          ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (27, N'Logistica', N'Almacen Principal - Area Logistica', 1, 1, 1, CAST(N'2025-07-14T08:59:49.163' AS DateTime), CAST(N'2025-07-14T08:59:49.163' AS DateTime), N'72966380', N'          ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (28, N'Contabilidad', N'Área de contabilidad 3er Piso', 1, 1, 1, CAST(N'2025-07-14T09:00:18.913' AS DateTime), CAST(N'2025-07-14T09:00:18.913' AS DateTime), N'72966380', N'          ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (29, N'Gerencia 3er Piso', N'Oficina de gerencia 3er Piso', 1, 1, 1, CAST(N'2025-07-14T09:00:52.610' AS DateTime), CAST(N'2025-07-14T09:00:52.610' AS DateTime), N'72966380', N'          ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (30, N'Almacén Lateral', N'Almacen lateral 1er Piso', 1, 1, 1, CAST(N'2025-07-14T09:01:29.293' AS DateTime), CAST(N'2025-07-14T09:01:29.293' AS DateTime), N'72966380', N'          ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (31, N'Caja', N'Área de caja 1er Piso', 1, 1, 1, CAST(N'2025-07-14T09:01:54.707' AS DateTime), CAST(N'2025-07-14T09:01:54.707' AS DateTime), N'72966380', N'          ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (32, N'Almacén 3er Piso', N'Almacén Grande 3er piso', 1, 1, 1, CAST(N'2025-07-14T09:03:09.960' AS DateTime), CAST(N'2025-07-14T09:03:09.960' AS DateTime), N'72966380', N'          ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (33, N'Ventas', N'Area de ventas 1er Piso', 1, 1, 1, CAST(N'2025-07-14T09:03:57.027' AS DateTime), CAST(N'2025-07-14T09:03:57.027' AS DateTime), N'72966380', N'          ')
INSERT [dbo].[tAmbiente] ([idAmbiente], [nombre], [descripcion], [idEmpresa], [idSucursal], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoAmbiente]) VALUES (34, N'Zona Playa', N'Área de labores mecánicas.', 1, 1, 1, CAST(N'2025-07-14T09:04:21.030' AS DateTime), CAST(N'2025-07-14T09:04:21.030' AS DateTime), N'72966380', N'          ')
SET IDENTITY_INSERT [dbo].[tAmbiente] OFF
GO
SET IDENTITY_INSERT [dbo].[tCategoriasActivo] ON 

INSERT [dbo].[tCategoriasActivo] ([idCategoria], [nombre], [descripcion], [vidaUtilEstandar], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoClase]) VALUES (1, N'Edificaciones y Construcciones', N'Talleres, Oficinas, Almacenes', 33, 1, CAST(N'2025-03-27T16:16:34.030' AS DateTime), NULL, NULL, N'EDF')
INSERT [dbo].[tCategoriasActivo] ([idCategoria], [nombre], [descripcion], [vidaUtilEstandar], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoClase]) VALUES (2, N'Maquinaria y Equipos Industriales', N'Equipos Industriales', 10, 1, CAST(N'2025-03-27T16:16:34.030' AS DateTime), NULL, NULL, N'MQI')
INSERT [dbo].[tCategoriasActivo] ([idCategoria], [nombre], [descripcion], [vidaUtilEstandar], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoClase]) VALUES (3, N'Equipos de Cómputo y Software', N'PCs, Servidores, impresoras, sistemas', 4, 1, CAST(N'2025-03-27T16:16:34.030' AS DateTime), NULL, NULL, N'COM')
INSERT [dbo].[tCategoriasActivo] ([idCategoria], [nombre], [descripcion], [vidaUtilEstandar], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoClase]) VALUES (4, N'Vehiculos y equipos de transporte', N'Flota de transporte, Grúas, camionetas', 5, 1, CAST(N'2025-03-27T16:16:34.030' AS DateTime), NULL, NULL, N'VEH')
INSERT [dbo].[tCategoriasActivo] ([idCategoria], [nombre], [descripcion], [vidaUtilEstandar], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoClase]) VALUES (5, N'Mobiliario y Equipos de Oficina', N'Escritorios, sillas, archivadores', 10, 1, CAST(N'2025-03-27T16:16:34.030' AS DateTime), NULL, NULL, N'MBO')
INSERT [dbo].[tCategoriasActivo] ([idCategoria], [nombre], [descripcion], [vidaUtilEstandar], [estado], [fechaRegistro], [fechaMod], [userMod], [codigoClase]) VALUES (6, N'Herrramientas y Equipos Menores', N'Llaves, taladros, instrumentos de medición', 5, 1, CAST(N'2025-03-27T16:16:34.030' AS DateTime), NULL, NULL, N'HER')
SET IDENTITY_INSERT [dbo].[tCategoriasActivo] OFF
GO
SET IDENTITY_INSERT [dbo].[tEstadoActivo] ON 

INSERT [dbo].[tEstadoActivo] ([idEstadoActivo], [nombre], [descripcion], [esFinal]) VALUES (1, N'Operativa', N'En buen estado', 0)
INSERT [dbo].[tEstadoActivo] ([idEstadoActivo], [nombre], [descripcion], [esFinal]) VALUES (2, N'Reparación', N'En mantenimiento', 0)
INSERT [dbo].[tEstadoActivo] ([idEstadoActivo], [nombre], [descripcion], [esFinal]) VALUES (3, N'Baja', N'Retirado', 1)
INSERT [dbo].[tEstadoActivo] ([idEstadoActivo], [nombre], [descripcion], [esFinal]) VALUES (4, N'Vendido', N'Vendido', 1)
INSERT [dbo].[tEstadoActivo] ([idEstadoActivo], [nombre], [descripcion], [esFinal]) VALUES (5, N'Regular', N'Regular estado', 0)
INSERT [dbo].[tEstadoActivo] ([idEstadoActivo], [nombre], [descripcion], [esFinal]) VALUES (6, N'Malo', N'Mal estado', 0)
SET IDENTITY_INSERT [dbo].[tEstadoActivo] OFF
GO
SET IDENTITY_INSERT [dbo].[tMenu] ON 

INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (1, N'Inicio', N'../Home/', N'Home', N'fas fa-home', N'Principal', N'fas fa-th', 1, N'72966380', CAST(N'2025-05-09T10:49:45.000' AS DateTime))
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (2, N'Todos', N'../Activos/', N'activos', N'fas fa-box', N'Activos', N'fas fa-cubes', 1, N'72966380', CAST(N'2025-05-09T10:49:45.000' AS DateTime))
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (3, N'Proveedores', N'../Proveedores/', N'proveedores', N'fas fa-truck', N'Configurar', N'fas fa-wrench', 1, N'72966380', CAST(N'2025-05-09T10:49:45.000' AS DateTime))
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (4, N'Sucursales', N'../Sucursal/', N'sucursales', N'fas fa-building', N'Configurar', N'fas fa-wrench', 1, N'72966380', CAST(N'2025-05-09T10:49:45.000' AS DateTime))
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (5, N'Usuarios', N'../Usuario/', N'usuarios', N'fas fa-users', N'Configurar', N'fas fa-wrench', 1, N'72966380', CAST(N'2025-05-09T10:49:45.000' AS DateTime))
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (6, N'Configuración', N'../Configuracion/', N'configuracion', N'fas fa-cog', N'Administración', N'fas fa-user-shield', 1, N'72966380', CAST(N'2025-05-09T10:49:45.000' AS DateTime))
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (7, N'Reportes', N'../Reportes/', N'reportes', N'fas fa-chart-bar', N'Reportes', N'fas fa-file-alt', 0, N'72966380', CAST(N'2025-05-09T10:49:45.000' AS DateTime))
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (8, N'Auditoría', N'../Auditoria/', N'auditoria', N'fas fa-history', N'Administración', N'fas fa-user-shield', 0, N'72966380', CAST(N'2025-05-09T10:49:45.000' AS DateTime))
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (9, N'Edificaciones', N'../Edificaciones/', N'movimiento', N'fas fa-city', N'Activos', N'fas fa-cubes', 1, N'72966380', CAST(N'2025-05-09T00:00:00.000' AS DateTime))
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (10, N'Permisos', N'../Permisos/', N'permisos', N'
fas fa-shield', N'Configurar', N'fas fa-wrench', 1, NULL, NULL)
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (11, N'Roles', N'../Roles/', N'roles', N'fas fa-universal-access', N'Configurar', N'fas fa-wrench', 1, NULL, NULL)
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (12, N'Ambientes', N'../Ambientes/', N'ambientes', N'fas fa-users-gear', N'Configurar', N'fas fa-wrench', 1, NULL, NULL)
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (13, N'Maquinarias', N'../Maquinarias/', N'maquinarias', N'fas fa-industry', N'Activos', N'fas fa-cubes', 1, NULL, NULL)
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (14, N'Cómputo', N'../Computo/', N'computo', N'fas fa-laptop', N'Activos', N'fas fa-cubes', 1, NULL, NULL)
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (15, N'Menu', N'../Menu/', N'menu', N'fas fa-list', N'Configurar', N'fas fa-wrench', 1, NULL, NULL)
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (16, N'Vehiculos', N'../Vehiculos/', N'vehiculos', N'fas fa-truck', N'Activos', N'fas fa-cubes', 1, N'72966380', CAST(N'2025-06-12T00:00:00.000' AS DateTime))
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (17, N'Oficina', N'../Oficina/', N'oficina', N'fas fa-chair', N'Activos', N'fas fa-cubes', 1, N'72966380', CAST(N'2025-06-12T00:00:00.000' AS DateTime))
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (18, N'Herramientas', N'../Herramientas/', N'herramientas', N'fas fa-tools', N'Activos', N'fas fa-cubes', 1, N'72966380', CAST(N'2025-06-12T00:00:00.000' AS DateTime))
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (19, N'Movimientos', N'../Movimientos/', N'movimientos', N'fas fa-arrow-right-arrow-left', N'Movimientos', N'fas fa-retweet', 1, N'72966380', CAST(N'2025-06-12T00:00:00.000' AS DateTime))
INSERT [dbo].[tMenu] ([CodMenu], [NombreMenu], [MenuRuta], [MenuIdentificador], [MenuIcono], [MenuGrupo], [MenuGrupoIcono], [Estado], [UserUpdate], [FechaUpdate]) VALUES (20, N'Compuestos', N'../MovimientosCompuestos/', N'movimientoscompuestos', N'fas fa-project-diagram', N'Movimientos', N'fas fa-retweet', 1, N'72966380', CAST(N'2025-06-12T00:00:00.000' AS DateTime))
SET IDENTITY_INSERT [dbo].[tMenu] OFF
GO
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (1, 393241, NULL, NULL, 122406, N'10038454001')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (2, 393241, NULL, NULL, 122406, N'10038454001')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (4, NULL, NULL, NULL, NULL, N'20484202908')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (5, NULL, NULL, NULL, NULL, N'20484202908')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (6, 363143, NULL, NULL, 250267, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (7, 363143, NULL, NULL, 250267, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (8, 363143, NULL, NULL, 132801, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (9, 363143, NULL, NULL, 132801, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (10, 363143, NULL, NULL, 132801, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (11, 363143, NULL, NULL, 132835, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (12, 363143, NULL, NULL, 132835, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (13, 363144, NULL, NULL, 207693, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (14, 363144, NULL, NULL, 207693, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (15, 363144, NULL, NULL, 207693, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (16, 363144, NULL, NULL, 207693, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (17, 363144, NULL, NULL, 249733, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (18, 363144, NULL, NULL, 249733, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (19, 363144, NULL, NULL, 249733, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (20, 362977, NULL, NULL, 251804, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (21, 362977, NULL, NULL, 251804, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (22, 362977, NULL, NULL, 251804, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (23, 362977, NULL, NULL, 250304, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (24, 362977, NULL, NULL, 250304, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (25, 362977, NULL, NULL, 250304, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (26, 363143, NULL, NULL, 132787, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (27, 363143, NULL, NULL, 132787, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (28, 363143, NULL, NULL, 132787, NULL)
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (29, 363143, NULL, NULL, 112173, N'20399129614')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (30, 363143, NULL, NULL, 112173, N'20399129614')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (31, 363143, NULL, NULL, 112173, N'20399129614')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (32, 363143, NULL, NULL, 112173, N'20399129614')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (33, 363143, NULL, NULL, 132788, N'20399129614')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (34, 363143, NULL, NULL, 132788, N'20399129614')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (35, 363143, NULL, NULL, 132788, N'20399129614')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (36, 363143, NULL, NULL, 132788, N'20399129614')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (37, NULL, NULL, NULL, NULL, N'20603129548')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (38, NULL, NULL, NULL, NULL, N'20603129548')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (39, NULL, NULL, NULL, NULL, N'10038565732')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (40, NULL, NULL, NULL, NULL, N'10038565732')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (41, NULL, NULL, NULL, NULL, N'10038565732')
INSERT [dbo].[tOrigenActivo] ([idActivo], [idDocIngresoAlm], [idDocumentoVenta], [idOrdenCompra], [idArticulo], [idProveedor]) VALUES (42, NULL, NULL, NULL, NULL, N'10038565732')
GO
SET IDENTITY_INSERT [dbo].[tPermisos] ON 

INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (1, 1, 1, 1, N'72966380', CAST(N'2025-05-09T10:56:08.223' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (2, 2, 1, 1, N'72966380', CAST(N'2025-05-09T10:56:08.223' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (3, 3, 1, 1, N'72966380', CAST(N'2025-05-09T10:56:08.223' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (4, 4, 1, 1, N'72966380', CAST(N'2025-05-09T10:56:08.223' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (5, 5, 1, 1, N'72966380', CAST(N'2025-05-09T10:56:08.223' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (6, 6, 1, 1, N'72966380', CAST(N'2025-05-09T10:56:08.223' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (7, 7, 1, 1, N'72966380', CAST(N'2025-05-09T10:56:08.223' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (8, 8, 1, 1, N'72966380', CAST(N'2025-05-09T10:56:08.223' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (9, 9, 1, 1, N'72966380', NULL)
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (10, 10, 1, 1, N'72966380', CAST(N'2025-05-09T00:00:00.000' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (11, 11, 1, 1, N'72966380', CAST(N'2025-05-09T00:00:00.000' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (12, 12, 1, 1, N'72966380', CAST(N'2025-05-09T00:00:00.000' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (13, 13, 1, 1, N'72966380', CAST(N'2025-05-09T00:00:00.000' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (14, 14, 1, 1, N'72966380', CAST(N'2025-05-09T00:00:00.000' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (15, 15, 1, 1, N'72966380', CAST(N'2025-05-09T00:00:00.000' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (16, 16, 1, 1, N'72966380', CAST(N'2025-06-11T00:00:00.000' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (17, 18, 1, 1, N'72966380', CAST(N'2025-06-11T00:00:00.000' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (18, 19, 1, 1, N'72966380', CAST(N'2025-06-11T00:00:00.000' AS DateTime))
INSERT [dbo].[tPermisos] ([CodPermiso], [CodMenu], [IdRol], [Permiso], [UserUpdate], [FechaUpdate]) VALUES (19, 20, 1, 1, N'72966380', CAST(N'2025-06-11T00:00:00.000' AS DateTime))
SET IDENTITY_INSERT [dbo].[tPermisos] OFF
GO
SET IDENTITY_INSERT [dbo].[tRoles] ON 

INSERT [dbo].[tRoles] ([IdRol], [NombreRol], [Estado], [UserUpdate], [FechaUpdate]) VALUES (1, N'Administrador', 1, NULL, NULL)
INSERT [dbo].[tRoles] ([IdRol], [NombreRol], [Estado], [UserUpdate], [FechaUpdate]) VALUES (2, N'Operador', 1, NULL, NULL)
INSERT [dbo].[tRoles] ([IdRol], [NombreRol], [Estado], [UserUpdate], [FechaUpdate]) VALUES (3, N'Supervisor', 1, N'72966380', CAST(N'2025-05-09T10:48:23.733' AS DateTime))
INSERT [dbo].[tRoles] ([IdRol], [NombreRol], [Estado], [UserUpdate], [FechaUpdate]) VALUES (4, N'Administración', 1, N'72966380', CAST(N'2025-05-09T10:48:23.733' AS DateTime))
INSERT [dbo].[tRoles] ([IdRol], [NombreRol], [Estado], [UserUpdate], [FechaUpdate]) VALUES (5, N'Contabilidad', 1, N'72966380', CAST(N'2025-05-09T10:48:23.733' AS DateTime))
INSERT [dbo].[tRoles] ([IdRol], [NombreRol], [Estado], [UserUpdate], [FechaUpdate]) VALUES (6, N'Coordinador Logistica', 1, N'72966380', CAST(N'2025-05-09T10:48:23.733' AS DateTime))
INSERT [dbo].[tRoles] ([IdRol], [NombreRol], [Estado], [UserUpdate], [FechaUpdate]) VALUES (7, N'Seguridad', 1, N'72966380', CAST(N'2025-05-09T10:48:23.733' AS DateTime))
INSERT [dbo].[tRoles] ([IdRol], [NombreRol], [Estado], [UserUpdate], [FechaUpdate]) VALUES (8, N'Asistente Logistica', 1, N'72966380', CAST(N'2025-05-09T10:48:23.733' AS DateTime))
INSERT [dbo].[tRoles] ([IdRol], [NombreRol], [Estado], [UserUpdate], [FechaUpdate]) VALUES (9, N'Ventas', 1, N'72966380', CAST(N'2025-05-09T10:48:23.733' AS DateTime))
INSERT [dbo].[tRoles] ([IdRol], [NombreRol], [Estado], [UserUpdate], [FechaUpdate]) VALUES (10, N'Almacen Logística', 1, N'72966380', CAST(N'2025-05-09T10:48:23.733' AS DateTime))
INSERT [dbo].[tRoles] ([IdRol], [NombreRol], [Estado], [UserUpdate], [FechaUpdate]) VALUES (11, N'Practicante Administración', 1, N'72966380', CAST(N'2025-05-09T10:48:23.733' AS DateTime))
INSERT [dbo].[tRoles] ([IdRol], [NombreRol], [Estado], [UserUpdate], [FechaUpdate]) VALUES (12, N'Supervisión Taller', 1, N'72966380', CAST(N'2025-05-09T10:48:23.733' AS DateTime))
INSERT [dbo].[tRoles] ([IdRol], [NombreRol], [Estado], [UserUpdate], [FechaUpdate]) VALUES (13, N'Usuario', 1, N'72966380', CAST(N'2025-05-09T10:48:23.733' AS DateTime))
SET IDENTITY_INSERT [dbo].[tRoles] OFF
GO
SET IDENTITY_INSERT [dbo].[tTipoMovimiento] ON 

INSERT [dbo].[tTipoMovimiento] ([idTipoMovimiento], [nombre], [descripcion]) VALUES (1, N'Traslado', N'Cambio de ubicación')
INSERT [dbo].[tTipoMovimiento] ([idTipoMovimiento], [nombre], [descripcion]) VALUES (2, N'Cambio de Responsable', N'Reasignación')
INSERT [dbo].[tTipoMovimiento] ([idTipoMovimiento], [nombre], [descripcion]) VALUES (3, N'Prestamo', N'Prestamo de activo')
INSERT [dbo].[tTipoMovimiento] ([idTipoMovimiento], [nombre], [descripcion]) VALUES (5, N'Mantenimiento', N'Mantenimiento de un activo')
INSERT [dbo].[tTipoMovimiento] ([idTipoMovimiento], [nombre], [descripcion]) VALUES (7, N'Devolución', N'Devolución de un activo')
INSERT [dbo].[tTipoMovimiento] ([idTipoMovimiento], [nombre], [descripcion]) VALUES (8, N'Entre Activos', N'Asignación de componentes.')
SET IDENTITY_INSERT [dbo].[tTipoMovimiento] OFF
GO
SET IDENTITY_INSERT [dbo].[tUbicacionActivo] ON 

INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (1, 1, NULL, 1, 10, NULL, CAST(N'2025-07-18T08:35:44.960' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (2, 2, 1, 1, 10, NULL, CAST(N'2025-07-18T09:12:32.137' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (3, 4, 1, 1, 34, N'72966380  ', CAST(N'2025-07-18T09:26:07.100' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (4, 5, 1, 1, 34, N'72966380  ', CAST(N'2025-07-18T09:26:07.100' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (5, 6, 1, 1, 26, NULL, CAST(N'2025-07-18T16:51:14.187' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (6, 7, 1, 1, 26, NULL, CAST(N'2025-07-18T16:51:14.187' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (7, 8, 1, 1, 30, NULL, CAST(N'2025-07-18T16:51:14.203' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (8, 9, 1, 1, 30, NULL, CAST(N'2025-07-18T16:51:14.203' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (9, 10, 1, 1, 30, NULL, CAST(N'2025-07-18T16:51:14.217' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (10, 11, 1, 1, 28, NULL, CAST(N'2025-07-19T13:19:56.387' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (11, 12, 1, 1, 31, NULL, CAST(N'2025-07-19T13:19:56.403' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (12, 13, 1, 1, 26, NULL, CAST(N'2025-07-21T11:45:51.273' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (13, 14, 1, 1, 34, NULL, CAST(N'2025-07-21T11:45:51.290' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (14, 15, 1, 1, 34, NULL, CAST(N'2025-07-21T11:45:51.290' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (15, 16, 1, 1, 34, NULL, CAST(N'2025-07-21T11:45:51.307' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (16, 17, 1, 1, 26, NULL, CAST(N'2025-07-21T11:45:51.307' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (17, 18, 1, 1, 26, NULL, CAST(N'2025-07-21T11:45:51.307' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (18, 19, 1, 1, 26, NULL, CAST(N'2025-07-21T11:45:51.320' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (19, 20, 1, 1, 31, NULL, CAST(N'2025-07-21T15:58:22.710' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (20, 21, 1, 1, 31, NULL, CAST(N'2025-07-21T15:58:22.727' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (21, 22, 1, 1, 31, NULL, CAST(N'2025-07-21T15:58:22.727' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (22, 23, 1, 1, 30, NULL, CAST(N'2025-07-21T16:09:42.450' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (23, 24, 1, 1, 30, NULL, CAST(N'2025-07-21T16:09:42.467' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (24, 25, 1, 1, 30, NULL, CAST(N'2025-07-21T16:09:42.467' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (25, 26, 1, 1, 26, NULL, CAST(N'2025-07-21T16:16:38.003' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (26, 27, 1, 1, 26, NULL, CAST(N'2025-07-21T16:16:38.020' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (27, 28, 1, 1, 26, NULL, CAST(N'2025-07-21T16:16:38.020' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (28, 29, 1, 1, 25, NULL, CAST(N'2025-07-21T16:17:59.033' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (29, 30, 1, 1, 25, NULL, CAST(N'2025-07-21T16:17:59.033' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (30, 31, 1, 1, 25, NULL, CAST(N'2025-07-21T16:17:59.050' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (31, 32, 1, 1, 25, NULL, CAST(N'2025-07-21T16:17:59.050' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (32, 33, 1, 1, 25, NULL, CAST(N'2025-07-21T16:19:04.457' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (33, 34, 1, 1, 25, NULL, CAST(N'2025-07-21T16:19:04.473' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (34, 35, 1, 1, 25, NULL, CAST(N'2025-07-21T16:19:04.490' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (35, 36, 1, 1, 25, NULL, CAST(N'2025-07-21T16:19:04.490' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (36, 37, 1, 1, 31, N'03832638  ', CAST(N'2025-07-21T16:33:23.243' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (37, 38, 1, 1, 31, N'03832638  ', CAST(N'2025-07-21T16:33:23.243' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (38, 39, 1, 1, 30, N'004694056 ', CAST(N'2025-07-21T17:46:34.453' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (39, 40, 1, 1, 30, N'004694056 ', CAST(N'2025-07-21T17:46:34.453' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (40, 41, 1, 1, 30, N'004694056 ', CAST(N'2025-07-21T17:46:34.470' AS DateTime), NULL, 1)
INSERT [dbo].[tUbicacionActivo] ([idUbicacion], [idActivo], [idEmpresa], [idSucursal], [idAmbiente], [idResponsable], [fechaInicio], [fechaFin], [esActual]) VALUES (41, 42, 1, 1, 30, N'004694056 ', CAST(N'2025-07-21T17:46:34.470' AS DateTime), NULL, 1)
SET IDENTITY_INSERT [dbo].[tUbicacionActivo] OFF
GO
INSERT [dbo].[tUsuarios] ([CodUsuario], [CodEmpleado], [IdRol], [ClaveAcceso], [UrlUltimaSession], [Activo], [UserUpdate], [FechaUpdate]) VALUES (N'72966380', N'72966380', 1, N'260904', NULL, 1, N'72966380', NULL)
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [UQ__tActivos__40F9A206F5E02AB4]    Script Date: 21/07/2025 17:58:29 ******/
ALTER TABLE [dbo].[tActivos] ADD UNIQUE NONCLUSTERED 
(
	[codigo] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [UQ_tCategoriasActivo_Nombre]    Script Date: 21/07/2025 17:58:29 ******/
ALTER TABLE [dbo].[tCategoriasActivo] ADD  CONSTRAINT [UQ_tCategoriasActivo_Nombre] UNIQUE NONCLUSTERED 
(
	[nombre] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [UQ_tEstadoActivo_Nombre]    Script Date: 21/07/2025 17:58:29 ******/
ALTER TABLE [dbo].[tEstadoActivo] ADD  CONSTRAINT [UQ_tEstadoActivo_Nombre] UNIQUE NONCLUSTERED 
(
	[nombre] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [UQ_tRoles_Nombre]    Script Date: 21/07/2025 17:58:29 ******/
ALTER TABLE [dbo].[tRoles] ADD  CONSTRAINT [UQ_tRoles_Nombre] UNIQUE NONCLUSTERED 
(
	[NombreRol] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON
GO
/****** Object:  Index [UQ_tTipoMovimiento_Nombre]    Script Date: 21/07/2025 17:58:29 ******/
ALTER TABLE [dbo].[tTipoMovimiento] ADD  CONSTRAINT [UQ_tTipoMovimiento_Nombre] UNIQUE NONCLUSTERED 
(
	[nombre] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
ALTER TABLE [dbo].[tActivoDetalle] ADD  DEFAULT ((0)) FOR [garantia]
GO
ALTER TABLE [dbo].[tActivos] ADD  DEFAULT ((1)) FOR [enUso]
GO
ALTER TABLE [dbo].[tActivos] ADD  DEFAULT ((0)) FOR [esPadre]
GO
ALTER TABLE [dbo].[tActivos] ADD  DEFAULT (getdate()) FOR [fechaRegistro]
GO
ALTER TABLE [dbo].[tAmbiente] ADD  CONSTRAINT [DF__tAmbiente__estad__638EB5B2]  DEFAULT ((1)) FOR [estado]
GO
ALTER TABLE [dbo].[tAmbiente] ADD  CONSTRAINT [DF__tAmbiente__fecha__6482D9EB]  DEFAULT (getdate()) FOR [fechaRegistro]
GO
ALTER TABLE [dbo].[tBajasActivo] ADD  DEFAULT (getdate()) FOR [fechaBaja]
GO
ALTER TABLE [dbo].[tCategoriasActivo] ADD  CONSTRAINT [DF__tCategori__estad__5ECA0095]  DEFAULT ((1)) FOR [estado]
GO
ALTER TABLE [dbo].[tCategoriasActivo] ADD  CONSTRAINT [DF__tCategori__fecha__5FBE24CE]  DEFAULT (getdate()) FOR [fechaRegistro]
GO
ALTER TABLE [dbo].[tCategoriasActivo] ADD  DEFAULT ('GEN') FOR [codigoClase]
GO
ALTER TABLE [dbo].[tDetalleMovimiento] ADD  DEFAULT (getdate()) FOR [fecha]
GO
ALTER TABLE [dbo].[tEstadoActivo] ADD  DEFAULT ((0)) FOR [esFinal]
GO
ALTER TABLE [dbo].[tHistorialEstado] ADD  DEFAULT (getdate()) FOR [fecha]
GO
ALTER TABLE [dbo].[tHistorialSerie] ADD  DEFAULT (getdate()) FOR [fecha]
GO
ALTER TABLE [dbo].[tHistorialUbicacion] ADD  DEFAULT (getdate()) FOR [fecha]
GO
ALTER TABLE [dbo].[tHistorialValorActivo] ADD  DEFAULT (getdate()) FOR [fecha]
GO
ALTER TABLE [dbo].[tLogAuditoria] ADD  DEFAULT (getdate()) FOR [fecha]
GO
ALTER TABLE [dbo].[tMantenimientos] ADD  DEFAULT (getdate()) FOR [fechaRegistro]
GO
ALTER TABLE [dbo].[tRoles] ADD  CONSTRAINT [DF__tRoles__estado__41399DAE]  DEFAULT ((1)) FOR [Estado]
GO
ALTER TABLE [dbo].[tUbicacionActivo] ADD  DEFAULT (getdate()) FOR [fechaInicio]
GO
ALTER TABLE [dbo].[tUbicacionActivo] ADD  DEFAULT ((1)) FOR [esActual]
GO
ALTER TABLE [dbo].[tUsuarios] ADD  CONSTRAINT [DF_tUsuarios_Activo]  DEFAULT ((1)) FOR [Activo]
GO
ALTER TABLE [dbo].[tActivoDetalle]  WITH CHECK ADD FOREIGN KEY([idActivo])
REFERENCES [dbo].[tActivos] ([idActivo])
GO
ALTER TABLE [dbo].[tActivoDetalle]  WITH CHECK ADD FOREIGN KEY([userMod])
REFERENCES [dbo].[tUsuarios] ([CodUsuario])
GO
ALTER TABLE [dbo].[tActivos]  WITH CHECK ADD FOREIGN KEY([idActivoPadre])
REFERENCES [dbo].[tActivos] ([idActivo])
GO
ALTER TABLE [dbo].[tActivos]  WITH CHECK ADD FOREIGN KEY([idCategoria])
REFERENCES [dbo].[tCategoriasActivo] ([idCategoria])
GO
ALTER TABLE [dbo].[tActivos]  WITH CHECK ADD FOREIGN KEY([idEstado])
REFERENCES [dbo].[tEstadoActivo] ([idEstadoActivo])
GO
ALTER TABLE [dbo].[tBajasActivo]  WITH CHECK ADD FOREIGN KEY([idActivo])
REFERENCES [dbo].[tActivos] ([idActivo])
GO
ALTER TABLE [dbo].[tBajasActivo]  WITH CHECK ADD FOREIGN KEY([userMod])
REFERENCES [dbo].[tUsuarios] ([CodUsuario])
GO
ALTER TABLE [dbo].[tCategoriasActivo]  WITH CHECK ADD  CONSTRAINT [FK_tCategoriasActivo_Usuario] FOREIGN KEY([userMod])
REFERENCES [dbo].[tUsuarios] ([CodUsuario])
GO
ALTER TABLE [dbo].[tCategoriasActivo] CHECK CONSTRAINT [FK_tCategoriasActivo_Usuario]
GO
ALTER TABLE [dbo].[tDetalleMovimiento]  WITH CHECK ADD  CONSTRAINT [FK_tDetalleMovimiento_Activo] FOREIGN KEY([idActivo])
REFERENCES [dbo].[tActivos] ([idActivo])
GO
ALTER TABLE [dbo].[tDetalleMovimiento] CHECK CONSTRAINT [FK_tDetalleMovimiento_Activo]
GO
ALTER TABLE [dbo].[tDetalleMovimiento]  WITH CHECK ADD  CONSTRAINT [FK_tDetalleMovimiento_Movimiento] FOREIGN KEY([idMovimiento])
REFERENCES [dbo].[tMovimientos] ([idMovimiento])
GO
ALTER TABLE [dbo].[tDetalleMovimiento] CHECK CONSTRAINT [FK_tDetalleMovimiento_Movimiento]
GO
ALTER TABLE [dbo].[tDetalleMovimiento]  WITH CHECK ADD  CONSTRAINT [FK_tDetalleMovimiento_TipoMovimiento] FOREIGN KEY([idTipoMovimiento])
REFERENCES [dbo].[tTipoMovimiento] ([idTipoMovimiento])
GO
ALTER TABLE [dbo].[tDetalleMovimiento] CHECK CONSTRAINT [FK_tDetalleMovimiento_TipoMovimiento]
GO
ALTER TABLE [dbo].[tHistorialEstado]  WITH CHECK ADD FOREIGN KEY([idActivo])
REFERENCES [dbo].[tActivos] ([idActivo])
GO
ALTER TABLE [dbo].[tHistorialEstado]  WITH CHECK ADD FOREIGN KEY([idEstadoAnterior])
REFERENCES [dbo].[tEstadoActivo] ([idEstadoActivo])
GO
ALTER TABLE [dbo].[tHistorialEstado]  WITH CHECK ADD FOREIGN KEY([idEstadoNuevo])
REFERENCES [dbo].[tEstadoActivo] ([idEstadoActivo])
GO
ALTER TABLE [dbo].[tHistorialEstado]  WITH CHECK ADD FOREIGN KEY([userMod])
REFERENCES [dbo].[tUsuarios] ([CodUsuario])
GO
ALTER TABLE [dbo].[tHistorialSerie]  WITH CHECK ADD FOREIGN KEY([idActivo])
REFERENCES [dbo].[tActivos] ([idActivo])
GO
ALTER TABLE [dbo].[tHistorialUbicacion]  WITH CHECK ADD FOREIGN KEY([idActivo])
REFERENCES [dbo].[tActivos] ([idActivo])
GO
ALTER TABLE [dbo].[tHistorialUbicacion]  WITH CHECK ADD FOREIGN KEY([idAmbienteAnterior])
REFERENCES [dbo].[tAmbiente] ([idAmbiente])
GO
ALTER TABLE [dbo].[tHistorialUbicacion]  WITH CHECK ADD FOREIGN KEY([idAmbienteNuevo])
REFERENCES [dbo].[tAmbiente] ([idAmbiente])
GO
ALTER TABLE [dbo].[tHistorialUbicacion]  WITH CHECK ADD FOREIGN KEY([userMod])
REFERENCES [dbo].[tUsuarios] ([CodUsuario])
GO
ALTER TABLE [dbo].[tHistorialValorActivo]  WITH CHECK ADD FOREIGN KEY([idActivo])
REFERENCES [dbo].[tActivos] ([idActivo])
GO
ALTER TABLE [dbo].[tHistorialValorActivo]  WITH CHECK ADD FOREIGN KEY([userMod])
REFERENCES [dbo].[tUsuarios] ([CodUsuario])
GO
ALTER TABLE [dbo].[tOrigenActivo]  WITH CHECK ADD FOREIGN KEY([idActivo])
REFERENCES [dbo].[tActivos] ([idActivo])
GO
ALTER TABLE [dbo].[tPermisos]  WITH CHECK ADD FOREIGN KEY([CodMenu])
REFERENCES [dbo].[tMenu] ([CodMenu])
GO
ALTER TABLE [dbo].[tPermisos]  WITH CHECK ADD FOREIGN KEY([IdRol])
REFERENCES [dbo].[tRoles] ([IdRol])
GO
ALTER TABLE [dbo].[tPermisos]  WITH CHECK ADD  CONSTRAINT [FK_tPermisos_tMenu] FOREIGN KEY([CodMenu])
REFERENCES [dbo].[tMenu] ([CodMenu])
GO
ALTER TABLE [dbo].[tPermisos] CHECK CONSTRAINT [FK_tPermisos_tMenu]
GO
ALTER TABLE [dbo].[tPermisos]  WITH CHECK ADD  CONSTRAINT [FK_tPermisos_tRoles] FOREIGN KEY([IdRol])
REFERENCES [dbo].[tRoles] ([IdRol])
GO
ALTER TABLE [dbo].[tPermisos] CHECK CONSTRAINT [FK_tPermisos_tRoles]
GO
ALTER TABLE [dbo].[tUbicacionActivo]  WITH CHECK ADD FOREIGN KEY([idActivo])
REFERENCES [dbo].[tActivos] ([idActivo])
GO
ALTER TABLE [dbo].[tUbicacionActivo]  WITH CHECK ADD FOREIGN KEY([idAmbiente])
REFERENCES [dbo].[tAmbiente] ([idAmbiente])
GO
ALTER TABLE [dbo].[tUsuarios]  WITH CHECK ADD  CONSTRAINT [FK_tUsuarios_Rol] FOREIGN KEY([IdRol])
REFERENCES [dbo].[tRoles] ([IdRol])
GO
ALTER TABLE [dbo].[tUsuarios] CHECK CONSTRAINT [FK_tUsuarios_Rol]
GO
ALTER TABLE [dbo].[tUsuarios]  WITH CHECK ADD  CONSTRAINT [FK_tUsuarios_tRoles] FOREIGN KEY([IdRol])
REFERENCES [dbo].[tRoles] ([IdRol])
GO
ALTER TABLE [dbo].[tUsuarios] CHECK CONSTRAINT [FK_tUsuarios_tRoles]
GO
ALTER TABLE [dbo].[tActivoDetalle]  WITH CHECK ADD CHECK  (([vidaUtil]>(0)))
GO
ALTER TABLE [dbo].[tActivos]  WITH CHECK ADD CHECK  (([tipoRegistro]='Documento' OR [tipoRegistro]='Manual'))
GO
ALTER TABLE [dbo].[tBajasActivo]  WITH CHECK ADD CHECK  (([tipoBaja]='Otro' OR [tipoBaja]='Robo' OR [tipoBaja]='Venta' OR [tipoBaja]='Pérdida' OR [tipoBaja]='Obsolescencia' OR [tipoBaja]='Deterioro'))
GO
/****** Object:  StoredProcedure [dbo].[sp_ActualizarActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE   PROCEDURE [dbo].[sp_ActualizarActivo]
    @pIdActivo INT,
    @pNombre NVARCHAR(100) = NULL,
    @pDescripcion NVARCHAR(MAX) = NULL,
    @pValorAdquisicion DECIMAL(12,2) = NULL,
    @pVidaUtil INT = NULL,
    @pGarantia BIT = NULL,
    @pFechaFinGarantia DATE = NULL,
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        IF NOT EXISTS (SELECT 1 FROM tActivos WHERE idActivo = @pIdActivo)
        BEGIN
            RAISERROR('Activo no encontrado', 16, 1);
            RETURN;
        END;

        UPDATE tActivoDetalle
        SET
            nombre = COALESCE(@pNombre, nombre),
            descripcion = COALESCE(@pDescripcion, descripcion),
            valorAdquisicion = COALESCE(@pValorAdquisicion, valorAdquisicion),
            vidaUtil = COALESCE(@pVidaUtil, vidaUtil),
            garantia = COALESCE(@pGarantia, garantia),
            fechaFinGarantia = CASE WHEN @pGarantia = 1 THEN @pFechaFinGarantia ELSE NULL END,
            fechaMod = GETDATE(),
            userMod = @pUserMod
        WHERE idActivo = @pIdActivo;

        COMMIT;
    END TRY
    BEGIN CATCH
        ROLLBACK;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_ActualizarUbicacionActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE   PROCEDURE [dbo].[sp_ActualizarUbicacionActivo]
    @pIdActivo INT,
    @pIdSucursal INT,
    @pIdAmbiente INT,
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Marcar ubicación anterior como no actual
        UPDATE tUbicacionActivo
        SET esActual = 0, fechaFin = GETDATE()
        WHERE idActivo = @pIdActivo AND esActual = 1;

        -- Insertar nueva ubicación
        INSERT INTO tUbicacionActivo (
            idActivo, idSucursal, idAmbiente, fechaInicio, esActual
        )
        VALUES (
            @pIdActivo, @pIdSucursal, @pIdAmbiente, GETDATE(), 1
        );

        COMMIT;
    END TRY
    BEGIN CATCH
        ROLLBACK;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_ActualizarValorActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_ActualizarValorActivo]
    @pIdActivo INT,
    @pValorNuevo DECIMAL(12,2),
    @pMotivo NVARCHAR(255),
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        BEGIN TRANSACTION;

        -- Validar que el activo exista y tenga detalle
        IF NOT EXISTS (SELECT 1 FROM tActivoDetalle WHERE idActivo = @pIdActivo)
        BEGIN
            RAISERROR('El activo no existe o no tiene detalle registrado.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        -- Obtener valor actual
        DECLARE @ValorAnterior DECIMAL(12,2);
        SELECT @ValorAnterior = valorAdquisicion
        FROM tActivoDetalle
        WHERE idActivo = @pIdActivo;

        -- Validar que el nuevo valor sea diferente
        IF @ValorAnterior = @pValorNuevo
        BEGIN
            RAISERROR('El valor nuevo es igual al actual.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        -- Actualizar valor en tActivoDetalle
        UPDATE tActivoDetalle
        SET valorAdquisicion = @pValorNuevo,
            userMod = @pUserMod,
            fechaMod = GETDATE()
        WHERE idActivo = @pIdActivo;

        -- Insertar en historial
        INSERT INTO tHistorialValorActivo (
            idActivo,
            valorAnterior,
            valorNuevo,
            motivo,
            fecha,
            userMod
        )
        VALUES (
            @pIdActivo,
            @ValorAnterior,
            @pValorNuevo,
            @pMotivo,
            GETDATE(),
            @pUserMod
        );

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_AsignarComponenteActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_AsignarComponenteActivo]
    @pIdActivoComponente INT,
    @pIdActivoPadre INT,
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        BEGIN TRANSACTION;

        -- Validar existencia
        IF NOT EXISTS (SELECT 1 FROM dbo.tActivos WHERE idActivo = @pIdActivoComponente)
        BEGIN
            RAISERROR('El activo componente no existe.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        IF NOT EXISTS (SELECT 1 FROM dbo.tActivos WHERE idActivo = @pIdActivoPadre)
        BEGIN
            RAISERROR('El activo padre no existe.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        -- Verificar que no se auto-asocie
        IF @pIdActivoComponente = @pIdActivoPadre
        BEGIN
            RAISERROR('Un activo no puede ser su propio padre.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        -- Actualizar componente
        UPDATE dbo.tActivos
        SET idActivoPadre = @pIdActivoPadre
        WHERE idActivo = @pIdActivoComponente;

        -- Marcar como "padre" al activo padre
        UPDATE dbo.tActivos
        SET esPadre = 1
        WHERE idActivo = @pIdActivoPadre;

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_AsignarResponsableActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE   PROCEDURE [dbo].[sp_AsignarResponsableActivo]
    @pIdActivo INT,
    @pIdResponsable NCHAR(10),
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Marcar el anterior como histórico
        UPDATE tUbicacionActivo
        SET esActual = 0, fechaFin = GETDATE()
        WHERE idActivo = @pIdActivo AND esActual = 1;

        -- Insertar nuevo responsable
        INSERT INTO tUbicacionActivo (
            idActivo, idResponsable, fechaInicio, esActual
        )
        VALUES (
            @pIdActivo, @pIdResponsable, GETDATE(), 1
        );

        COMMIT;
    END TRY
    BEGIN CATCH
        ROLLBACK;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_BajaActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_BajaActivo]
    @pIdActivo INT,
    @pTipoBaja VARCHAR(50),
    @pMotivo NVARCHAR(MAX),
    @pDocumentoSoporte NVARCHAR(100) = NULL,
    @pObservaciones NVARCHAR(MAX) = NULL,
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Validar existencia del activo
        IF NOT EXISTS (SELECT 1 FROM dbo.tActivos WHERE idActivo = @pIdActivo)
        BEGIN
            RAISERROR('El activo no existe.', 16, 1);
            RETURN;
        END;

        -- Obtener estado anterior
        DECLARE @EstadoAnterior INT;
        SELECT @EstadoAnterior = idEstado FROM dbo.tActivos WHERE idActivo = @pIdActivo;

        -- Cambiar estado del activo a "De baja" (debes tener un idEstadoActivo para esto)
        DECLARE @EstadoDeBaja INT;
        SELECT @EstadoDeBaja = idEstadoActivo FROM dbo.tEstadoActivo WHERE nombre = 'De baja';

        IF @EstadoDeBaja IS NULL
        BEGIN
            RAISERROR('No existe un estado "De baja".', 16, 1);
            RETURN;
        END;

        UPDATE dbo.tActivos
        SET idEstado = @EstadoDeBaja
        WHERE idActivo = @pIdActivo;

        -- Registrar en tBajasActivo
        INSERT INTO dbo.tBajasActivo (
            idActivo, tipoBaja, motivo, documentoSoporte,
            observaciones, userMod
        ) VALUES (
            @pIdActivo, @pTipoBaja, @pMotivo, @pDocumentoSoporte,
            @pObservaciones, @pUserMod
        );

        -- Historial de estado
        INSERT INTO dbo.tHistorialEstado (
            idActivo, idEstadoAnterior, idEstadoNuevo,
            userMod
        ) VALUES (
            @pIdActivo, @EstadoAnterior, @EstadoDeBaja,
            @pUserMod
        );

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_CambiarEstadoActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_CambiarEstadoActivo]
    @pIdActivo INT,
    @pNuevoEstado INT,
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        BEGIN TRANSACTION;

        DECLARE @EstadoAnterior INT;

        -- Verificar que exista el activo
        SELECT @EstadoAnterior = idEstado
        FROM dbo.tActivos
        WHERE idActivo = @pIdActivo;

        IF @EstadoAnterior IS NULL
        BEGIN
            RAISERROR('El activo no existe.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        IF @EstadoAnterior = @pNuevoEstado
        BEGIN
            RAISERROR('El activo ya tiene este estado.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        -- Actualizar el estado
        UPDATE dbo.tActivos
        SET idEstado = @pNuevoEstado
        WHERE idActivo = @pIdActivo;

        -- Insertar en historial
        INSERT INTO dbo.tHistorialEstado (
            idActivo, idEstadoAnterior, idEstadoNuevo, fecha, userMod
        )
        VALUES (
            @pIdActivo, @EstadoAnterior, @pNuevoEstado, GETDATE(), @pUserMod
        );

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_CambiarSerieActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_CambiarSerieActivo]
    @pIdActivo INT,
    @pSerieNueva NVARCHAR(100),
    @pMotivo NVARCHAR(255),
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        BEGIN TRANSACTION;

        -- Validar existencia del activo
        IF NOT EXISTS (
            SELECT 1 FROM tActivoDetalle WHERE idActivo = @pIdActivo
        )
        BEGIN
            RAISERROR('El activo no existe o no tiene detalle registrado.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        -- Obtener serie actual
        DECLARE @SerieAnterior NVARCHAR(100);
        SELECT @SerieAnterior = serie
        FROM tActivoDetalle
        WHERE idActivo = @pIdActivo;

        -- Validar que sea una serie diferente
        IF @SerieAnterior = @pSerieNueva
        BEGIN
            RAISERROR('La nueva serie es igual a la actual.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        -- Actualizar la nueva serie en tActivoDetalle
        UPDATE tActivoDetalle
        SET serie = @pSerieNueva,
            userMod = @pUserMod,
            fechaMod = GETDATE()
        WHERE idActivo = @pIdActivo;

        -- Registrar en historial de serie
        INSERT INTO tHistorialSerie (
            idActivo,
            serieAnterior,
            serieNueva,
            motivo,
            fecha,
            userMod
        )
        VALUES (
            @pIdActivo,
            @SerieAnterior,
            @pSerieNueva,
            @pMotivo,
            GETDATE(),
            @pUserMod
        );

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_CancelarMantenimiento]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_CancelarMantenimiento]
    @pIdMantenimiento INT,
    @pMotivo NVARCHAR(MAX),
    @pIdEstadoMantenimiento INT = 3, -- Estado "Cancelado"
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        BEGIN TRANSACTION;

        -- Validar mantenimiento
        IF NOT EXISTS (SELECT 1 FROM dbo.tMantenimientos WHERE idMantenimiento = @pIdMantenimiento)
        BEGIN
            RAISERROR('El mantenimiento no existe.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        -- Validar estado
        IF NOT EXISTS (SELECT 1 FROM dbo.tEstadoMantenimiento WHERE idEstadoMantenimiento = @pIdEstadoMantenimiento)
        BEGIN
            RAISERROR('El estado de cancelación no es válido.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        -- Actualizar estado y observación
        UPDATE dbo.tMantenimientos
        SET 
            idEstadoMantenimiento = @pIdEstadoMantenimiento,
            observaciones = ISNULL(observaciones, '') + CHAR(13) + 'Cancelado: ' + @pMotivo,
            userMod = @pUserMod
        WHERE idMantenimiento = @pIdMantenimiento;


        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_ConsultarActivos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_ConsultarActivos]
	@pIdArticulo INT = NULL,
    @pCodigo NVARCHAR(50) = NULL,
    @pIdEmpresa INT = NULL,
    @pIdSucursal NUMERIC(18,0) = NULL,
    @pIdCategoria INT = NULL,
    @pIdEstado INT = NULL,
    @pAccion INT
AS
BEGIN
    SET NOCOUNT ON;

    -- Acción 1: ResumenActivos
    IF @pAccion = 1
    BEGIN
        SELECT a.*
        FROM vActivosResumen a
        INNER JOIN vUnidadesdeNegocio s ON a.idSucursal = s.cod_UnidadNeg
        INNER JOIN tCategoriasActivo c ON a.idCategoria = c.idCategoria
        INNER JOIN tEstadoActivo e ON a.idEstadoActivo = e.idEstadoActivo
        WHERE (@pCodigo IS NULL OR a.codigo = @pCodigo)
            AND (@pIdEmpresa IS NULL OR a.IdEmpresa = @pIdEmpresa)
            AND (@pIdSucursal IS NULL OR a.idSucursal = @pIdSucursal)
            AND (@pIdCategoria IS NULL OR a.idCategoria = @pIdCategoria)
            AND (@pIdEstado IS NULL OR a.idEstadoActivo = @pIdEstado)
            AND a.idEstadoActivo <> 3
    END

END
GO
/****** Object:  StoredProcedure [dbo].[sp_DarDeBajaActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_DarDeBajaActivo]
    @pIdActivo INT,
    @pTipoBaja VARCHAR(50),
    @pMotivo NVARCHAR(MAX),
    @pDocumentoSoporte NVARCHAR(100) = NULL,
    @pObservaciones NVARCHAR(MAX) = NULL,
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        BEGIN TRANSACTION;

        DECLARE @EstadoAnterior INT, @EstadoBaja INT = 5; -- Cambiar según ID real de estado "Baja"

        SELECT @EstadoAnterior = idEstado
        FROM dbo.tActivos
        WHERE idActivo = @pIdActivo;

        IF @EstadoAnterior IS NULL
        BEGIN
            RAISERROR('El activo no existe.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        IF @EstadoAnterior = @EstadoBaja
        BEGIN
            RAISERROR('El activo ya está dado de baja.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        -- Validar tipo de baja
        IF @pTipoBaja NOT IN ('Deterioro', 'Obsolescencia', 'Pérdida', 'Venta', 'Robo', 'Otro')
        BEGIN
            RAISERROR('Tipo de baja no válido.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        -- Cambiar estado a Baja
        UPDATE dbo.tActivos
        SET idEstado = @EstadoBaja
        WHERE idActivo = @pIdActivo;

        -- Insertar en historial de estados
        INSERT INTO dbo.tHistorialEstado (
            idActivo, idEstadoAnterior, idEstadoNuevo, fecha, userMod
        )
        VALUES (
            @pIdActivo, @EstadoAnterior, @EstadoBaja, GETDATE(), @pUserMod
        );

        -- Insertar en tabla de bajas
        INSERT INTO dbo.tBajasActivo (
            idActivo, tipoBaja, motivo, documentoSoporte, observaciones, userMod
        )
        VALUES (
            @pIdActivo, @pTipoBaja, @pMotivo, @pDocumentoSoporte, @pObservaciones, @pUserMod
        );

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_EnviarActivoMantenimiento]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_EnviarActivoMantenimiento]
    @pIdActivo INT,
    @pIdTipoMantenimiento INT,
    @pFechaProgramada DATE = NULL,
    @pDescripcion NVARCHAR(MAX) = NULL,
    @pCosto DECIMAL(12,2) = NULL,
    @pIdResponsable NVARCHAR(15) = NULL,
    @pIdEstadoMantenimiento INT = 1, -- Estado por defecto: "Programado"
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        BEGIN TRANSACTION;

        -- Validaciones
        IF NOT EXISTS (SELECT 1 FROM dbo.tActivos WHERE idActivo = @pIdActivo)
        BEGIN
            RAISERROR('El activo no existe.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        IF NOT EXISTS (SELECT 1 FROM dbo.tTipoMantenimiento WHERE idTipoMantenimiento = @pIdTipoMantenimiento)
        BEGIN
            RAISERROR('Tipo de mantenimiento no válido.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        IF NOT EXISTS (SELECT 1 FROM dbo.tEstadoMantenimiento WHERE idEstadoMantenimiento = @pIdEstadoMantenimiento)
        BEGIN
            RAISERROR('Estado de mantenimiento no válido.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        IF @pIdResponsable IS NOT NULL AND NOT EXISTS (SELECT 1 FROM dbo.tUsuarios WHERE codUsuario = @pIdResponsable)
        BEGIN
            RAISERROR('El responsable asignado no existe.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        -- Insertar mantenimiento
        INSERT INTO dbo.tMantenimientos (
            idActivo,
            idTipoMantenimiento,
            fechaProgramada,
            descripcion,
            costoEstimado,
            idResponsable,
            idEstadoMantenimiento,
            fechaRegistro,
            userMod
        )
        VALUES (
            @pIdActivo,
            @pIdTipoMantenimiento,
            @pFechaProgramada,
            @pDescripcion,
            @pCosto,
            @pIdResponsable,
            @pIdEstadoMantenimiento,
            GETDATE(),
            @pUserMod
        );

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;

        DECLARE @Msg NVARCHAR(4000), @Err INT;
        SELECT @Msg = ERROR_MESSAGE(), @Err = ERROR_NUMBER();
        RAISERROR(@Msg, 16, 1);
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_EnviarActivosAMantenimiento]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_EnviarActivosAMantenimiento]
    @pXmlActivos XML,
    @pIdTipoMantenimiento INT,
    @pFechaProgramada DATE = NULL,
    @pDescripcion NVARCHAR(MAX) = NULL,
    @pObservaciones NVARCHAR(MAX) = NULL,
    @pCostoEstimado DECIMAL(12,2) = NULL,
    @pIdProveedor NVARCHAR(15) = NULL,
    @pIdResponsable NVARCHAR(15) = NULL,
    @pIdEstadoMantenimiento INT = 1, -- Programado
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        BEGIN TRANSACTION;

        -- Validaciones generales
        IF NOT EXISTS (SELECT 1 FROM dbo.tTipoMantenimiento WHERE idTipoMantenimiento = @pIdTipoMantenimiento)
            THROW 50000, 'El tipo de mantenimiento no existe.', 1;

        IF NOT EXISTS (SELECT 1 FROM dbo.tEstadoMantenimiento WHERE idEstadoMantenimiento = @pIdEstadoMantenimiento)
            THROW 50001, 'El estado de mantenimiento no existe.', 1;

        -- Tabla temporal para activos a procesar
        DECLARE @Activos TABLE (idActivo INT);

        -- Cargar activos desde XML
        INSERT INTO @Activos(idActivo)
        SELECT t.value('.', 'INT') AS idActivo
        FROM @pXmlActivos.nodes('/Activos/idActivo') AS x(t);

        -- Procesar cada activo
        DECLARE @idActivo INT;
        DECLARE activos_cursor CURSOR FOR SELECT idActivo FROM @Activos;

        OPEN activos_cursor;
        FETCH NEXT FROM activos_cursor INTO @idActivo;

        WHILE @@FETCH_STATUS = 0
        BEGIN

            -- Obtener estado actual
            DECLARE @idEstadoAnterior INT;
            SELECT @idEstadoAnterior = idEstado FROM dbo.tActivos WHERE idActivo = @idActivo;

            -- Registrar mantenimiento
            INSERT INTO dbo.tMantenimientos (
                idActivo, idTipoMantenimiento, fechaProgramada, descripcion,
                observaciones, costoEstimado, idProveedor, idResponsable,
                idEstadoMantenimiento, fechaRegistro, userMod
            )
            VALUES (
                @idActivo, @pIdTipoMantenimiento, @pFechaProgramada, @pDescripcion,
                @pObservaciones, @pCostoEstimado, @pIdProveedor, @pIdResponsable,
                @pIdEstadoMantenimiento, GETDATE(), @pUserMod
            );

            -- Cambiar estado del activo (opcional, asumimos estado "En Mantenimiento" = 4)
            UPDATE dbo.tActivos
            SET idEstado = 4
            WHERE idActivo = @idActivo;

            -- Registrar historial de estado
            INSERT INTO dbo.tHistorialEstado (
                idActivo, idEstadoAnterior, idEstadoNuevo, fecha, userMod
            )
            VALUES (
                @idActivo, @idEstadoAnterior, 4, GETDATE(), @pUserMod
            );

            FETCH NEXT FROM activos_cursor INTO @idActivo;
        END

        CLOSE activos_cursor;
        DEALLOCATE activos_cursor;

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;

        DECLARE @ErrorMessage NVARCHAR(4000), @ErrorSeverity INT, @ErrorState INT;
        SELECT 
            @ErrorMessage = ERROR_MESSAGE(), 
            @ErrorSeverity = ERROR_SEVERITY(), 
            @ErrorState = ERROR_STATE();
        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
    END CATCH
END
GO
/****** Object:  StoredProcedure [dbo].[sp_FinalizarMantenimiento]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_FinalizarMantenimiento]
    @XmlMantenimientos XML,
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Tabla temporal para procesar los mantenimientos
        CREATE TABLE #Mantenimientos (
            idMantenimiento INT,
            fechaRealizada DATE,
            costoReal DECIMAL(12,2),
            observaciones NVARCHAR(MAX),
            idEstadoMantenimiento INT
        );

        INSERT INTO #Mantenimientos (idMantenimiento, fechaRealizada, costoReal, observaciones, idEstadoMantenimiento)
        SELECT
            T.Item.value('(idMantenimiento)[1]', 'INT'),
            T.Item.value('(fechaRealizada)[1]', 'DATE'),
            T.Item.value('(costoReal)[1]', 'DECIMAL(12,2)'),
            T.Item.value('(observaciones)[1]', 'NVARCHAR(MAX)'),
            T.Item.value('(idEstadoMantenimiento)[1]', 'INT')
        FROM @XmlMantenimientos.nodes('/Mantenimientos/Mantenimiento') AS T(Item);

        -- Recorrer los mantenimientos
        DECLARE @idMantenimiento INT,
                @fechaRealizada DATE,
                @costoReal DECIMAL(12,2),
                @observaciones NVARCHAR(MAX),
                @idEstadoMantenimiento INT,
                @idActivo INT,
                @idEstadoAnterior INT;

        DECLARE cur CURSOR LOCAL FOR
        SELECT idMantenimiento, fechaRealizada, costoReal, observaciones, idEstadoMantenimiento
        FROM #Mantenimientos;

        OPEN cur;
        FETCH NEXT FROM cur INTO @idMantenimiento, @fechaRealizada, @costoReal, @observaciones, @idEstadoMantenimiento;

        WHILE @@FETCH_STATUS = 0
        BEGIN
            -- Obtener activo y estado anterior
            SELECT 
                @idActivo = A.idActivo,
                @idEstadoAnterior = A.idEstado
            FROM tMantenimientos M
            INNER JOIN tActivos A ON M.idActivo = A.idActivo
            WHERE M.idMantenimiento = @idMantenimiento;

            -- Actualizar mantenimiento
            UPDATE tMantenimientos
            SET 
                fechaRealizada = @fechaRealizada,
                costoReal = @costoReal,
                observaciones = @observaciones,
                idEstadoMantenimiento = @idEstadoMantenimiento,
                userMod = @pUserMod
            WHERE idMantenimiento = @idMantenimiento;

            -- Cambiar estado del activo si es necesario (por ejemplo, volver a "Operativo" si salió de mantenimiento)
            DECLARE @idEstadoNuevo INT = 1; -- Estado "Operativo" (puedes ajustar según lógica)

            IF @idEstadoAnterior <> @idEstadoNuevo
            BEGIN
                UPDATE tActivos
                SET idEstado = @idEstadoNuevo
                WHERE idActivo = @idActivo;

                -- Registrar historial de estado
                INSERT INTO tHistorialEstado (
                    idActivo, idEstadoAnterior, idEstadoNuevo, fecha, userMod
                )
                VALUES (
                    @idActivo, @idEstadoAnterior, @idEstadoNuevo, GETDATE(), @pUserMod
                );
            END;

            FETCH NEXT FROM cur INTO @idMantenimiento, @fechaRealizada, @costoReal, @observaciones, @idEstadoMantenimiento;
        END;

        CLOSE cur;
        DEALLOCATE cur;

        DROP TABLE #Mantenimientos;

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_MoverComponenteActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_MoverComponenteActivo]
    @pIdActivoComponente INT,
    @pNuevoPadre INT,
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        BEGIN TRANSACTION;

        DECLARE @idPadreAnterior INT;

        SELECT @idPadreAnterior = idActivoPadre FROM dbo.tActivos WHERE idActivo = @pIdActivoComponente;

        IF @idPadreAnterior = @pNuevoPadre
        BEGIN
            RAISERROR('El componente ya pertenece a ese activo.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        -- Asignar nuevo padre
        UPDATE dbo.tActivos
        SET idActivoPadre = @pNuevoPadre
        WHERE idActivo = @pIdActivoComponente;

        -- Marcar nuevo como padre
        UPDATE dbo.tActivos
        SET esPadre = 1
        WHERE idActivo = @pNuevoPadre;

        -- Si el anterior padre quedó sin componentes, desmarcar
        IF NOT EXISTS (SELECT 1 FROM dbo.tActivos WHERE idActivoPadre = @idPadreAnterior)
        BEGIN
            UPDATE dbo.tActivos
            SET esPadre = 0
            WHERE idActivo = @idPadreAnterior;
        END;

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_QuitarComponenteActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_QuitarComponenteActivo]
    @pIdActivoComponente INT,
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        BEGIN TRANSACTION;

        DECLARE @idPadre INT;

        SELECT @idPadre = idActivoPadre FROM dbo.tActivos WHERE idActivo = @pIdActivoComponente;

        IF @idPadre IS NULL
        BEGIN
            RAISERROR('Este activo no está asociado a ningún padre.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        -- Quitar relación
        UPDATE dbo.tActivos
        SET idActivoPadre = NULL
        WHERE idActivo = @pIdActivoComponente;

        -- Si el padre ya no tiene más componentes, actualizar esPadre = 0
        IF NOT EXISTS (
            SELECT 1 FROM dbo.tActivos WHERE idActivoPadre = @idPadre
        )
        BEGIN
            UPDATE dbo.tActivos
            SET esPadre = 0
            WHERE idActivo = @idPadre;
        END;

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_ReasignarResponsable]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_ReasignarResponsable]
    @xmlActivos XML,
    @userMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @idMovimiento INT;

    -- Crear movimiento (tipo 2 = Reasignación)
    INSERT INTO tMovimientos (codigoMovimiento, idTipoMovimiento, fechaMovimiento, userMod)
    SELECT 
        'REA-' + RIGHT('00000' + CAST(ISNULL(MAX(idMovimiento), 0) + 1 AS NVARCHAR), 5),
        2, -- Reasignación
        GETDATE(),
        @userMod
    FROM tMovimientos;

    SET @idMovimiento = SCOPE_IDENTITY();

    DECLARE @idActivo INT,
            @idResponsableAnterior NVARCHAR(15),
            @idResponsableNuevo NVARCHAR(15),
            @idEmpresa INT,
            @idSucursal INT,
            @idAmbiente INT;

    DECLARE activo_cursor CURSOR FOR
    SELECT
        T.Item.value('@idActivo', 'INT'),
        T.Item.value('@nuevoResponsable', 'NVARCHAR(15)')
    FROM @xmlActivos.nodes('/Activos/Activo') AS T(Item);

    OPEN activo_cursor;
    FETCH NEXT FROM activo_cursor INTO @idActivo, @idResponsableNuevo;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        -- Obtener ubicación actual
        SELECT TOP 1
            @idResponsableAnterior = ua.idResponsable,
            @idEmpresa = ua.idEmpresa,
            @idSucursal = ua.idSucursal,
            @idAmbiente = ua.idAmbiente
        FROM tUbicacionActivo ua
        WHERE ua.idActivo = @idActivo AND ua.esActual = 1;

        -- Cerrar ubicación actual
        UPDATE tUbicacionActivo
        SET fechaFin = GETDATE(), esActual = 0
        WHERE idActivo = @idActivo AND esActual = 1;

        -- Insertar nueva ubicación con nuevo responsable
        INSERT INTO tUbicacionActivo (
            idActivo, idEmpresa, idSucursal, idAmbiente, idResponsable, fechaInicio, esActual
        )
        VALUES (
            @idActivo, @idEmpresa, @idSucursal, @idAmbiente, @idResponsableNuevo, GETDATE(), 1
        );

        -- Insertar en historial de ubicación
        INSERT INTO tHistorialUbicacion (
            idActivo, idAmbienteAnterior, idAmbienteNuevo,
            idResponsableAnterior, idResponsableNuevo,
            fecha, userMod
        )
        VALUES (
            @idActivo, @idAmbiente, @idAmbiente, -- ambiente no cambia
            @idResponsableAnterior, @idResponsableNuevo,
            GETDATE(), @userMod
        );

        FETCH NEXT FROM activo_cursor INTO @idActivo, @idResponsableNuevo;
    END;

    CLOSE activo_cursor;
    DEALLOCATE activo_cursor;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_RegistrarActivoDesdeDocumento]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE   PROCEDURE [dbo].[sp_RegistrarActivoDesdeDocumento]
    @pIdDocIngresoAlm INT,
    @pIdArticulo INT,
    @pIdEstado INT,
    @pGarantia BIT = 0,
    @pFechaFinGarantia DATE = NULL,
    @pIdProveedor NVARCHAR(15) = NULL,
    @pIdEmpresa INT,
    @pIdSucursal INT,
    @pIdAmbiente INT = NULL,
    @pIdCategoria INT,
    @pVidaUtil INT,
    @pSerie NVARCHAR(100) = NULL,
    @pObservaciones NVARCHAR(MAX) = NULL,
    @pValorAdquisicion DECIMAL(12,2),
    @pFechaAdquisicion DATE,
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        -- Generar código automático
        DECLARE @Codigo NVARCHAR(50), @CodigoCategoria NVARCHAR(10), @Correlativo INT;
        SELECT @CodigoCategoria = codigoClase FROM tCategoriasActivo WHERE idCategoria = @pIdCategoria;
        SELECT @Correlativo = ISNULL(MAX(CAST(RIGHT(codigo, 5) AS INT)), 0) + 1 
        FROM tActivos WHERE codigo LIKE @CodigoCategoria + '-%';
        SET @Codigo = @CodigoCategoria + '-' + RIGHT('00000' + CAST(@Correlativo AS NVARCHAR), 5);

        -- Insertar en tActivos
        INSERT INTO tActivos (codigo, tipoRegistro, idCategoria, idEstado, enUso, fechaRegistro)
        VALUES (@Codigo, 'Documento', @pIdCategoria, @pIdEstado, 1, GETDATE());
        DECLARE @IdActivo INT = SCOPE_IDENTITY();

        -- Insertar detalles del activo
        INSERT INTO tActivoDetalle (
            idActivo, serie, observaciones, valorAdquisicion, vidaUtil, garantia, fechaAdquisicion, fechaFinGarantia, userMod, fechaMod
        )
        VALUES (
            @IdActivo, @pSerie, @pObservaciones, @pValorAdquisicion, @pVidaUtil, @pGarantia, @pFechaAdquisicion, @pFechaFinGarantia, @pUserMod, GETDATE()
        );

        IF @pIdProveedor IS NULL
            BEGIN
                DECLARE @rucProveedor NVARCHAR(20);

                SELECT TOP 1 @rucProveedor = Documento
                FROM vListadoDeArticulosPorDocIngresoAlmacen
                WHERE idDocIngAlmacen = @pIdDocIngresoAlm AND idArticulo = @pIdArticulo;

                SELECT TOP 1 @pIdProveedor = Documento
                FROM vEntidadExternaGeneralProveedor
                WHERE Documento = @rucProveedor;
            END;

        -- Insertar origen (documento y artículo)
        INSERT INTO tOrigenActivo (idActivo, idDocIngresoAlm, idArticulo, idProveedor)
        VALUES (@IdActivo, @pIdDocIngresoAlm, @pIdArticulo, @pIdProveedor);

        -- Insertar ubicación
        INSERT INTO tUbicacionActivo (idActivo, idEmpresa, idSucursal, idAmbiente, fechaInicio, esActual)
        VALUES (@IdActivo, @pIdEmpresa,@pIdSucursal, @pIdAmbiente, GETDATE(), 1);

        COMMIT;
    END TRY
    BEGIN CATCH
        ROLLBACK;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_RegistrarActivoManual]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE   PROCEDURE [dbo].[sp_RegistrarActivoManual]
    @pNombre NVARCHAR(50),
    @pDescripcion NVARCHAR(MAX),
    @pIdEstado INT,
    @pGarantia BIT = 0,
    @pIdResponsable NCHAR(10),
    @pFechaFinGarantia DATE = NULL,
    @pIdProveedor NVARCHAR(15),
    @pIdEmpresa INT,
    @pIdSucursal INT,
    @pIdAmbiente INT,
    @pIdCategoria INT,
    @pVidaUtil INT,
    @pSerie NVARCHAR(100) = NULL,
    @pObservaciones NVARCHAR(MAX) = NULL,
    @pValorAdquisicion DECIMAL(12,2),
    @pFechaAdquisicion DATE,
    @pUserMod NVARCHAR(15),
    @pCantidad INT = 1
AS
BEGIN
    SET NOCOUNT ON;
    BEGIN TRY
        BEGIN TRANSACTION;

        DECLARE @i INT = 1;
        WHILE @i <= @pCantidad
        BEGIN
            DECLARE @Codigo NVARCHAR(50), @CodigoCategoria NVARCHAR(10), @CodigoEmpresa NVARCHAR(10), @Correlativo INT;

            SELECT @CodigoCategoria = codigoClase FROM tCategoriasActivo WHERE idCategoria = @pIdCategoria;
            SELECT @CodigoEmpresa = AbreEmpresa FROM vEmpresas e
              JOIN vUnidadesdeNegocio s ON s.Cod_Empresa = e.cod_empresa
              WHERE s.cod_UnidadNeg = @pIdSucursal;

            SELECT @Correlativo = ISNULL(MAX(CAST(RIGHT(codigo, 5) AS INT)), 0) + 1 
            FROM tActivos WHERE codigo LIKE @CodigoCategoria + '-%';

            SET @Codigo = @CodigoCategoria + '-' + RIGHT('00000' + CAST(@Correlativo AS NVARCHAR), 5);

            -- Insertar en tActivos
            INSERT INTO tActivos (codigo, tipoRegistro, idCategoria, idEstado, enUso, fechaRegistro)
            VALUES (@Codigo, 'Manual', @pIdCategoria, @pIdEstado, 1, GETDATE());
            DECLARE @IdActivo INT = SCOPE_IDENTITY();

            -- Detalles
            INSERT INTO tActivoDetalle (
                idActivo, nombre, descripcion, serie, observaciones, valorAdquisicion, vidaUtil, garantia,
                fechaAdquisicion, fechaFinGarantia, userMod, fechaMod
            )
            VALUES (
                @IdActivo, @pNombre, @pDescripcion, @pSerie, @pObservaciones, @pValorAdquisicion, @pVidaUtil, @pGarantia,
                @pFechaAdquisicion, @pFechaFinGarantia, @pUserMod, GETDATE()
            );

            -- Ubicación
            INSERT INTO tUbicacionActivo (
                idActivo, idEmpresa, idSucursal, idAmbiente, idResponsable, fechaInicio, esActual
            )
            VALUES (
                @IdActivo, @pIdEmpresa, @pIdSucursal, @pIdAmbiente, @pIdResponsable, GETDATE(), 1
            );

            -- Origen
            INSERT INTO tOrigenActivo (idActivo, idProveedor)
            VALUES (@IdActivo, @pIdProveedor);

            SET @i += 1;
        END;

        COMMIT;
    END TRY
    BEGIN CATCH
        ROLLBACK;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_RegistrarMovimientoActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_RegistrarMovimientoActivo]
    @pIdActivo INT,
    @pIdAmbienteDestino INT = NULL,
    @pIdResponsableDestino NVARCHAR(15) = NULL,
    @pMotivo NVARCHAR(MAX) = NULL,
    @pUserMod NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        BEGIN TRANSACTION;

        -- Validar existencia de activo
        IF NOT EXISTS (SELECT 1 FROM dbo.tActivos WHERE idActivo = @pIdActivo)
        BEGIN
            RAISERROR('El activo no existe.', 16, 1);
            ROLLBACK TRANSACTION;
            RETURN;
        END;

        DECLARE @idUbicacionActual INT, @idAmbienteAnterior INT, @idResponsableAnterior NVARCHAR(15);

        -- Obtener ubicación actual
        SELECT TOP 1 
            @idUbicacionActual = idUbicacion,
            @idAmbienteAnterior = idAmbiente,
            @idResponsableAnterior = idResponsable
        FROM dbo.tUbicacionActivo
        WHERE idActivo = @pIdActivo AND esActual = 1
        ORDER BY fechaInicio DESC;

        -- Finalizar ubicación actual si existe
        IF @idUbicacionActual IS NOT NULL
        BEGIN
            UPDATE dbo.tUbicacionActivo
            SET esActual = 0, fechaFin = GETDATE()
            WHERE idUbicacion = @idUbicacionActual;
        END;

        -- Insertar nueva ubicación (como actual)
        INSERT INTO dbo.tUbicacionActivo (
            idActivo, idEmpresa, idSucursal, idAmbiente, idResponsable, fechaInicio, esActual
        )
        SELECT
            @pIdActivo, ua.idEmpresa, ua.idSucursal, @pIdAmbienteDestino, @pIdResponsableDestino, GETDATE(), 1
        FROM dbo.tUbicacionActivo ua
        WHERE ua.idActivo = @pIdActivo
        AND ua.idUbicacion = @idUbicacionActual;

        -- Insertar en historial
        INSERT INTO dbo.tHistorialUbicacion (
            idActivo, idAmbienteAnterior, idAmbienteNuevo, 
            idResponsableAnterior, idResponsableNuevo,
            fecha, userMod
        )
        VALUES (
            @pIdActivo, @idAmbienteAnterior, @pIdAmbienteDestino,
            @idResponsableAnterior, @pIdResponsableDestino,
            GETDATE(), @pUserMod
        );

        COMMIT TRANSACTION;
    END TRY
    BEGIN CATCH
        ROLLBACK TRANSACTION;
        THROW;
    END CATCH
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_TrasladarActivo]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_TrasladarActivo]
    @idActivo INT,
    @idAmbienteNuevo INT,
    @idUsuario NVARCHAR(15)
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @idUbicacionAnterior INT,
            @idAmbienteAnterior INT,
            @idEmpresa INT,
            @idSucursal INT,
            @idResponsable NVARCHAR(15),
            @idMovimiento INT,
            @codigoMovimiento NVARCHAR(20),
            @idTipoMovimiento INT = (SELECT idTipoMovimiento FROM tTipoMovimiento WHERE nombre = 'Traslado');

    -- Validaciones básicas
    IF NOT EXISTS (SELECT 1 FROM tActivos WHERE idActivo = @idActivo)
    BEGIN
        RAISERROR('El activo no existe.', 16, 1);
        RETURN;
    END

    IF NOT EXISTS (SELECT 1 FROM tAmbiente WHERE idAmbiente = @idAmbienteNuevo AND estado = 1)
    BEGIN
        RAISERROR('El ambiente destino no existe o está inactivo.', 16, 1);
        RETURN;
    END

    -- Obtener ubicación actual
    SELECT TOP 1
        @idUbicacionAnterior = ua.idUbicacion,
        @idAmbienteAnterior = ua.idAmbiente,
        @idEmpresa = ua.idEmpresa,
        @idSucursal = ua.idSucursal,
        @idResponsable = ua.idResponsable
    FROM tUbicacionActivo ua
    WHERE ua.idActivo = @idActivo AND ua.esActual = 1;

    IF @idAmbienteAnterior = @idAmbienteNuevo
    BEGIN
        RAISERROR('El ambiente de destino es el mismo que el actual.', 16, 1);
        RETURN;
    END

    -- Cerrar ubicación actual
    UPDATE tUbicacionActivo
    SET esActual = 0,
        fechaFin = GETDATE()
    WHERE idUbicacion = @idUbicacionAnterior;

    -- Registrar nueva ubicación
    INSERT INTO tUbicacionActivo (
        idActivo, idEmpresa, idSucursal, idAmbiente,
        idResponsable, fechaInicio, esActual
    )
    VALUES (
        @idActivo, @idEmpresa, @idSucursal, @idAmbienteNuevo,
        @idResponsable, GETDATE(), 1
    );

    -- Insertar en historial de ubicación
    INSERT INTO tHistorialUbicacion (
        idActivo, idAmbienteAnterior, idAmbienteNuevo,
        idResponsableAnterior, idResponsableNuevo,
        fecha, userMod
    )
    VALUES (
        @idActivo, @idAmbienteAnterior, @idAmbienteNuevo,
        @idResponsable, @idResponsable,
        GETDATE(), @idUsuario
    );

    -- Crear encabezado de movimiento
    INSERT INTO tMovimientos (codigoMovimiento, idTipoMovimiento, fechaMovimiento, userMod)
    VALUES (NULL, @idTipoMovimiento, GETDATE(), @idUsuario);

    SET @idMovimiento = SCOPE_IDENTITY();

    -- Generar código tipo "TRA-00001"
    SET @codigoMovimiento = 'TRA-' + RIGHT('00000' + CAST(@idMovimiento AS VARCHAR), 5);

    UPDATE tMovimientos
    SET codigoMovimiento = @codigoMovimiento
    WHERE idMovimiento = @idMovimiento;

    -- (Opcional) Insertar detalle si decides usar tDetalleMovimiento

    PRINT 'Traslado registrado correctamente con código: ' + @codigoMovimiento;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_TrasladarActivos]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_TrasladarActivos]
    @idTipoMovimiento INT,
    @userMod NVARCHAR(15),
    @xmlActivos XML
AS
BEGIN
    SET NOCOUNT ON;

    -- Crear movimiento
    DECLARE @idMovimiento INT;

    INSERT INTO tMovimientos (codigoMovimiento, idTipoMovimiento, fechaMovimiento, userMod)
    VALUES (
        FORMAT(GETDATE(), 'yyyyMMddHHmmss'), 
        @idTipoMovimiento,
        GETDATE(),
        @userMod
    );

    SET @idMovimiento = SCOPE_IDENTITY();

    -- Tabla temporal para los activos a trasladar
    CREATE TABLE #TmpActivos (
        idActivo INT,
        idAmbienteNuevo INT,
        idResponsableNuevo NVARCHAR(15)
    );

    -- Parsear XML
    INSERT INTO #TmpActivos (idActivo, idAmbienteNuevo, idResponsableNuevo)
    SELECT
        Tbl.Col.value('(idActivo)[1]', 'INT'),
        Tbl.Col.value('(idAmbienteDestino)[1]', 'INT'),
        Tbl.Col.value('(idResponsableDestino)[1]', 'NVARCHAR(15)')
    FROM @xmlActivos.nodes('//Activos/Activo') AS Tbl(Col);

    -- Recorrer activos y registrar traslado
    DECLARE @idActivo INT, @idAmbienteNuevo INT, @idResponsableNuevo NVARCHAR(15);
    DECLARE @idAmbienteAnterior INT, @idResponsableAnterior NVARCHAR(15);

    DECLARE c CURSOR FOR
        SELECT idActivo, idAmbienteNuevo, idResponsableNuevo FROM #TmpActivos;

    OPEN c;
    FETCH NEXT FROM c INTO @idActivo, @idAmbienteNuevo, @idResponsableNuevo;

    WHILE @@FETCH_STATUS = 0
    BEGIN
        -- Obtener ubicación actual
        SELECT TOP 1 
            @idAmbienteAnterior = ua.idAmbiente,
            @idResponsableAnterior = ua.idResponsable
        FROM tUbicacionActivo ua
        WHERE ua.idActivo = @idActivo AND ua.esActual = 1;

        -- Finalizar ubicación anterior
        UPDATE tUbicacionActivo
        SET esActual = 0,
            fechaFin = GETDATE()
        WHERE idActivo = @idActivo AND esActual = 1;

        -- Insertar nueva ubicación
        INSERT INTO tUbicacionActivo (idActivo, idEmpresa, idSucursal, idAmbiente, idResponsable, fechaInicio, esActual)
        SELECT 
            a.idActivo,
            amb.idEmpresa,
            amb.idSucursal,
            @idAmbienteNuevo,
            @idResponsableNuevo,
            GETDATE(),
            1
        FROM tActivos a
        INNER JOIN tAmbiente amb ON amb.idAmbiente = @idAmbienteNuevo
        WHERE a.idActivo = @idActivo;

        -- Insertar en historial de ubicación
        INSERT INTO tHistorialUbicacion (idActivo, idAmbienteAnterior, idAmbienteNuevo, idResponsableAnterior, idResponsableNuevo, fecha, userMod)
        VALUES (
            @idActivo,
            @idAmbienteAnterior,
            @idAmbienteNuevo,
            @idResponsableAnterior,
            @idResponsableNuevo,
            GETDATE(),
            @userMod
        );

        FETCH NEXT FROM c INTO @idActivo, @idAmbienteNuevo, @idResponsableNuevo;
    END

    CLOSE c;
    DEALLOCATE c;

    DROP TABLE #TmpActivos;
END;
GO
/****** Object:  StoredProcedure [dbo].[sp_ValidarUsuario]    Script Date: 21/07/2025 17:58:29 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[sp_ValidarUsuario]
    @pAccion NVARCHAR(20),
    @CodUsuario NVARCHAR(15),
    @ClaveAcceso NVARCHAR(10)
AS
BEGIN
    SET NOCOUNT ON;

    BEGIN TRY
        IF @pAccion NOT IN ('VERIFICAR')
            THROW 50001, 'Acción no válida. Use: VERIFICAR', 1;

        IF @pAccion = 'VERIFICAR'
        BEGIN
            SELECT 
                u.CodUsuario,
                u.CodEmpleado,
                u.IdRol,
                c.NombreTrabajador,
                c.CorreoPersonal,
                c.Foto,
                c.Firma,
                u.UrlUltimaSession
            FROM tUsuarios u
            INNER JOIN bdRecursosHumanos.dbo.vcontratos c ON u.CodEmpleado = c.codTrabajador
            WHERE 
                u.CodUsuario = @CodUsuario
                AND u.ClaveAcceso = @ClaveAcceso
                AND u.Activo = 1
                AND c.EstadoActual NOT IN ('ve', 'fi');
        END
    END TRY
    BEGIN CATCH
        THROW;
    END CATCH
END;
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "det"
            Begin Extent = 
               Top = 138
               Left = 38
               Bottom = 268
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "cat"
            Begin Extent = 
               Top = 270
               Left = 38
               Bottom = 400
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "est"
            Begin Extent = 
               Top = 402
               Left = 38
               Bottom = 532
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ub"
            Begin Extent = 
               Top = 534
               Left = 38
               Bottom = 664
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "amb"
            Begin Extent = 
               Top = 666
               Left = 38
               Bottom = 796
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ori"
            Begin Extent = 
               Top = 798
               Left = 38
               Bottom = 928
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
     ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vActivos'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'    End
         Begin Table = "art"
            Begin Extent = 
               Top = 6
               Left = 284
               Bottom = 136
               Right = 498
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "prov"
            Begin Extent = 
               Top = 6
               Left = 536
               Bottom = 136
               Right = 777
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "em"
            Begin Extent = 
               Top = 138
               Left = 284
               Bottom = 268
               Right = 492
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 35
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vActivos'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vActivos'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ad"
            Begin Extent = 
               Top = 138
               Left = 38
               Bottom = 268
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ua"
            Begin Extent = 
               Top = 270
               Left = 38
               Bottom = 400
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "amb"
            Begin Extent = 
               Top = 402
               Left = 38
               Bottom = 532
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ea"
            Begin Extent = 
               Top = 534
               Left = 38
               Bottom = 664
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ca"
            Begin Extent = 
               Top = 666
               Left = 38
               Bottom = 796
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "oa"
            Begin Extent = 
               Top = 798
               Left = 38
               Bottom = 928
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vActivosConsolidado'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'End
         Begin Table = "art"
            Begin Extent = 
               Top = 6
               Left = 284
               Bottom = 136
               Right = 498
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "prov"
            Begin Extent = 
               Top = 6
               Left = 536
               Bottom = 136
               Right = 777
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 9
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vActivosConsolidado'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vActivosConsolidado'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane1', @value=N'[0E232FF0-B466-11cf-A24F-00AA00A3EFFF, 1.00]
Begin DesignProperties = 
   Begin PaneConfigurations = 
      Begin PaneConfiguration = 0
         NumPanes = 4
         Configuration = "(H (1[40] 4[20] 2[20] 3) )"
      End
      Begin PaneConfiguration = 1
         NumPanes = 3
         Configuration = "(H (1 [50] 4 [25] 3))"
      End
      Begin PaneConfiguration = 2
         NumPanes = 3
         Configuration = "(H (1 [50] 2 [25] 3))"
      End
      Begin PaneConfiguration = 3
         NumPanes = 3
         Configuration = "(H (4 [30] 2 [40] 3))"
      End
      Begin PaneConfiguration = 4
         NumPanes = 2
         Configuration = "(H (1 [56] 3))"
      End
      Begin PaneConfiguration = 5
         NumPanes = 2
         Configuration = "(H (2 [66] 3))"
      End
      Begin PaneConfiguration = 6
         NumPanes = 2
         Configuration = "(H (4 [50] 3))"
      End
      Begin PaneConfiguration = 7
         NumPanes = 1
         Configuration = "(V (3))"
      End
      Begin PaneConfiguration = 8
         NumPanes = 3
         Configuration = "(H (1[56] 4[18] 2) )"
      End
      Begin PaneConfiguration = 9
         NumPanes = 2
         Configuration = "(H (1 [75] 4))"
      End
      Begin PaneConfiguration = 10
         NumPanes = 2
         Configuration = "(H (1[66] 2) )"
      End
      Begin PaneConfiguration = 11
         NumPanes = 2
         Configuration = "(H (4 [60] 2))"
      End
      Begin PaneConfiguration = 12
         NumPanes = 1
         Configuration = "(H (1) )"
      End
      Begin PaneConfiguration = 13
         NumPanes = 1
         Configuration = "(V (4))"
      End
      Begin PaneConfiguration = 14
         NumPanes = 1
         Configuration = "(V (2))"
      End
      ActivePaneConfig = 0
   End
   Begin DiagramPane = 
      Begin Origin = 
         Top = 0
         Left = 0
      End
      Begin Tables = 
         Begin Table = "a"
            Begin Extent = 
               Top = 6
               Left = 38
               Bottom = 136
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ad"
            Begin Extent = 
               Top = 138
               Left = 38
               Bottom = 268
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ua"
            Begin Extent = 
               Top = 270
               Left = 38
               Bottom = 400
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "amb"
            Begin Extent = 
               Top = 402
               Left = 38
               Bottom = 532
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ea"
            Begin Extent = 
               Top = 534
               Left = 38
               Bottom = 664
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "ca"
            Begin Extent = 
               Top = 666
               Left = 38
               Bottom = 796
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "oa"
            Begin Extent = 
               Top = 798
               Left = 38
               Bottom = 928
               Right = 246
            End
            DisplayFlags = 280
            TopColumn = 0
         ' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vActivosResumen'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPane2', @value=N'End
         Begin Table = "art"
            Begin Extent = 
               Top = 930
               Left = 38
               Bottom = 1060
               Right = 252
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "prov"
            Begin Extent = 
               Top = 1062
               Left = 38
               Bottom = 1192
               Right = 279
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "s"
            Begin Extent = 
               Top = 1194
               Left = 38
               Bottom = 1324
               Right = 269
            End
            DisplayFlags = 280
            TopColumn = 0
         End
         Begin Table = "em"
            Begin Extent = 
               Top = 6
               Left = 284
               Bottom = 136
               Right = 492
            End
            DisplayFlags = 280
            TopColumn = 0
         End
      End
   End
   Begin SQLPane = 
   End
   Begin DataPane = 
      Begin ParameterDefaults = ""
      End
      Begin ColumnWidths = 16
         Width = 284
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
         Width = 1500
      End
   End
   Begin CriteriaPane = 
      Begin ColumnWidths = 11
         Column = 1440
         Alias = 900
         Table = 1170
         Output = 720
         Append = 1400
         NewValue = 1170
         SortType = 1350
         SortOrder = 1410
         GroupBy = 1350
         Filter = 1350
         Or = 1350
         Or = 1350
         Or = 1350
      End
   End
End
' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vActivosResumen'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_DiagramPaneCount', @value=2 , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'VIEW',@level1name=N'vActivosResumen'
GO
